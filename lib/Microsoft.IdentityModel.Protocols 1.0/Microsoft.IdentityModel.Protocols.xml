<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.IdentityModel.Protocols</name>
    </assembly>
    <members>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2Exception">
            <summary>
            The <c>Saml2Exception</c> class indicates a SAML-related error has occurred.
            </summary>    
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2Exception.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2Exception"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2Exception.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2Exception"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2Exception.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2Exception"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception. </param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2Exception"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">An object that describes the source or destination of the serialized data.</param>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.ConsentIdentifiers">
            <summary>
            The <c>ConsentIdentifiers</c> class contains constants used on the
            RequestAbstractType and StatusResponseType complex types to communicate whether
            a principal gave consent, and under what conditions, for the message.
            </summary>
            <remarks> See [SamlCore, 8.4] for more details.</remarks>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.ConsentIdentifiers.Explicit">
            <summary>
            Indicates that a principal's consent has been explicitly obtained by the issuer of the 
            message during the action that initiated the message. See [SamlCore, 8.4.5] for more
            details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.ConsentIdentifiers.Implicit">
            <summary>
            Indicates that a principal's consent has been implicitly obtained by the issuer of the
            message during the action that initiated the message, as part of a broader indication
            of consent. Implicit consent is typically more proximal to the action in time and 
            presentation than prior consent, such as part of a session of activities. See [SamlCore, 8.4.4]
            for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.ConsentIdentifiers.Inapplicable">
            <summary>
            Indicates that the issuer of the message does not believe that they need to obtain
            or report consent. See [SamlCore, 8.4.7] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.ConsentIdentifiers.Obtained">
            <summary>
            Indicates that a principal's consent has been obtained by the issuer of the 
            message. See [SamlCore, 8.4.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.ConsentIdentifiers.Prior">
            <summary>
            Indicates that a principal's consent has been obtained by the issuer of the message
            at some point prior to the action that initiated the message. See [SamlCore, 8.4.3]
             for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.ConsentIdentifiers.Unavailable">
            <summary>
            Indicates that the issuer of the message did not obtain consent. See [SamlCore, 8.4.6]
             for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.ConsentIdentifiers.Unspecified">
            <summary>
            No claim as to principal consent is being made. See [SamlCore, 8.4.1]
             for more details.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Web.Configuration.ConfigurationStrings">
            <summary>
            The <c>ConfigurationStrings</c> class provides constants used in SAML specific configuration.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Web.Configuration.MetadataElement">
            <summary>
            The <c>MetadataElement</c> class provides support for specifying a file containing SAML metadata in configuration.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Web.Configuration.MetadataElement.File">
            <summary>
            Gets the address of the file containing SAML metadata.
            </summary>
            <value>The address of the file containing SAML metadata.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.EntitySecurityTokenResolver">
            <summary>
            The <c>EntitySecurityTokenResolver</c> class resolves security tokens or keys from partner's configuration.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.EntitySecurityTokenResolver.#ctor(Microsoft.IdentityModel.Protocols.Saml2.EntityConfiguration,System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.EntitySecurityTokenResolver"/> class.
            </summary>
            <param name="entityConfiguration">The remote SAML entities configuration.</param>
            <param name="wrappedTokenResolver">The <c>SecurityTokenResolver</c> used for non-SAML specific <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause"/>.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.EntitySecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
            <summary>
            Attempts to retrieve the key that is referenced in the specified key identifier clause.
            </summary>
            <param name="keyIdentifierClause">A SecurityKeyIdentifierClause to retrieve the key for.</param>
            <param name="key">When this method returns, contains a SecurityKey that contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.</param>
            <returns>true when a key can be retrieved for the specified key identifier clause; otherwise, false. </returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.EntitySecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
            <summary>
            Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.
            </summary>
            <param name="keyIdentifier">The SecurityKeyIdentifier to create a security token for.</param>
            <param name="token">When this method returns, contains a SecurityToken that represents the specified key identifier. This parameter is passed uninitialized.</param>
            <returns>true when a security token can be retrieved for the specified key identifier; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.EntitySecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
            <summary>
            Attempts to resolve the security token that matches the specified key identifier clause.
            </summary>
            <param name="keyIdentifierClause">The SecurityKeyIdentifierClause to create a security token for.</param>
            <param name="token">When this method returns, contains a SecurityToken that represents the specified key identifier clause. This parameter is passed uninitialized.</param>
            <returns>true when a security token can be retrieved for the specified key identifier clause; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.Elements">
            <summary>
            The <c>Elements</c> class contains string constants for SAML protocol elements.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant">
            <summary>
            The <c>SessionParticipant</c> class stores information about an active session with a SAML service provider or authority.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant.#ctor(System.String,System.Boolean,Microsoft.IdentityModel.Tokens.Saml2.Saml2NameIdentifier,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant"/> class.
            </summary>
            <param name="entityId">The identifier of the entity that authenticated the principal.</param>
            <param name="isAuthority">A value indicating whether or not the session is with an authority or with a service provider.</param>
            <param name="nameId">The identifier of the principal.</param>
            <param name="sessionIndex">The index of the principal's session with the other entity.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant.#ctor(System.String,System.Boolean,Microsoft.IdentityModel.Tokens.Saml2.Saml2NameIdentifier,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant"/> class.
            </summary>
            <param name="entityId">The identifier of the entity that authenticated the principal.</param>
            <param name="isAuthority">A value indicating whether or not the session is with an authority or with a service provider.</param>
            <param name="nameId">The identifier of the principal.</param>
            <param name="sessionIndexes">The indexes of the principal's sessions with the other entity.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant"/>; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current SessionParticipant.</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant.EntityId">
            <summary>
            Gets the identifier of the service provider or authority that the session is held with.
            </summary>
            <value>The identifier of the service provider or authority that the session is held with.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant.IsAuthority">
            <summary>
            Gets a value indicating whether or not the SAML entity the session is held with is acting as an authority or a service provider.
            </summary>
            <value>Whether or not the SAML entity the session is held with is acting as an authority or a service provider.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant.NameId">
            <summary>
            Gets the identifier of the principal.
            </summary>
            <value>The identifier of the principal.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant.SessionIndexes">
            <summary>
            Gets the indexes of the principal's sessions at the SAML partner.
            </summary>
            <value>The indexes of the principal's sessions at the SAML partner.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2MessageSecurityKeyIdentifierClause">
            <summary>
            The <c>Saml2MessageSecurityKeyIdentifierClause</c> class represents a security key that is must be resolved by inspecting
            a <c>Saml2Message</c>.
            </summary>
            <remarks>
            This class is used when a <c>Saml2Message</c> is received without a KeyInfo inside the signature element.
            The KeyInfo describes the key required to check the signature.  When the key is needed this clause 
            will be presented to the current SecurityTokenResolver. It will contain the 
            <c>Saml2Message</c>c> fully read which can be queried to determine the key required.
            </remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2MessageSecurityKeyIdentifierClause.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2MessageSecurityKeyIdentifierClause"/> class.
            </summary>
            <param name="message">The message can be queried to obtain information about 
            the issuer when resolving the key needed to check the signature. The message will
            be read completely when this clause is passed to the SecurityTokenResolver.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2MessageSecurityKeyIdentifierClause.Message">
            <summary>
            Gets the SAML message to be used when resolving the signing token.
            </summary>
            <remarks>When SAML messages are being processed and have signatures without KeyInfo, 
            this property will contain the message that is currently being processed.
            </remarks>
            <value>The SAML message to be used when resolving the signing token.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.EntityConfiguration">
            <summary>
            The <c>EntityConfiguration</c> class provides configuration information about other SAML entities in the federation.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.EntityConfiguration.GetEntity(System.String)">
            <summary>
            Returns configuration information about a given SAML entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>The configuration information about the requested entity.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.EntityConfiguration.GetEntityIds">
            <summary>
            Returns a list of all known SAML entities.
            </summary>
            <returns>The entity identifiers of all known entities.</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.StatusResponse">
            <summary>
            The <c>StatusResponse</c> class contains information common to all SAML responses.
            </summary>
            <remarks>See the samlp:StatusResponseType defined in [SamlCore, 3.2.2] for more details.</remarks>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2Message">
            <summary>
            The <c>Saml2Message</c> class contains information common to all SAML messages.
            </summary>
            <remarks>See the common parts of samlp:RequestAbstractType and samlp:StatusResponseType defined in
            [SamlCore, 3.2.1] and [SamlCore, 3.2.2] for more details.</remarks>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2Message.Consent">
            <summary>
            Gets or sets whether or not (and under what conditions) consent has been 
            obtained from a principal in the sending of this message.
            </summary>
            <value>Whether or not (and under what conditions) consent has been 
            obtained from a principal in the sending of this message.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2Message.Destination">
            <summary>
            Gets or sets a URI indicating the address to which this message has 
            been sent.
            </summary>
            <value>A URI indicating the address to which this message has 
            been sent.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2Message.Extensions">
            <summary>
            Gets the set of extension elements.
            </summary>
            <remarks>To serialize and deserialize extensions, Saml2ProtocolSerializer must be extended. See [SamlCore, 3.2.1] for more details.</remarks>
            <value>The set of extension elements.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2Message.Id">
            <summary>
            Gets or sets the identifier of the message. 
            </summary>
            <value>The identifier of the message.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2Message.IssueInstant">
            <summary>
            Gets or sets the time instant of issue of the message.
            </summary>
            <value>The time instant of issue of the message.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2Message.Issuer">
            <summary>
            Gets or sets the identifier of the entity that generated the message.
            </summary>
            <value>The identifier of the entity that generated the message.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2Message.SigningCredentials">
            <summary>
            Gets or sets the credentials used to sign this message when it is serialized.
            </summary>
            <value>The credentials used to sign this message when it is serialized.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2Message.Version">
            <summary>
            Gets the version of this message.
            </summary>
            <details>
            As outlined in [SamlCore, 4], the implementer has the option of 
            choosing to process messages which have a supported major version 
            even if the minor version is unsupported. At this time, this code
            intends to support only exactly version "2.0". However, the 
            version string will be maintained in the data structures in case
            of such a time where a revised minor version may be supported. It
            is expected that a major version revision would result in a new 
            processing model with new data structures.
            </details>
            <value>The version of this message.</value>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.StatusResponse.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Status)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.StatusResponse"/> class.
            </summary>
            <param name="status">The SAML status code associated with this response.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.StatusResponse.InResponseTo">
            <summary>
            Gets or sets the identifier of the request to which the 
            response corresponds, if any.
            </summary>
            <remarks>See [SamlCore, 3.2.1] for more details.</remarks>
            <value>The identifier of the request to which this response corresponds.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.StatusResponse.Status">
            <summary>
            Gets or sets the status of the response.
            </summary>
            <value>The status of the response.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.MetadataEntityConfiguration">
            <summary>
            The <c>MetadataEntityConfiguration</c> class provides configuration information about other 
            SAML entities based on their SAML metadata.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MetadataEntityConfiguration.#ctor(System.Collections.Generic.IEnumerable{Microsoft.IdentityModel.Protocols.WSFederation.Metadata.EntityDescriptor})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.MetadataEntityConfiguration"/> class.
            </summary>
            <param name="entities">The entity descriptors describing SAML providers.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MetadataEntityConfiguration.GetEntity(System.String)">
            <summary>
            Returns configuration information about a given SAML entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>The configuration information about the requested entity.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MetadataEntityConfiguration.GetEntityIds">
            <summary>
            Returns a list of all known SAML entities.
            </summary>
            <returns>The entity identifiers of all known entities.</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.MessageValidator">
            <summary>
            The <c>MessageValidator</c> class validates properties of incoming SAML messages.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidator.Validate(Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Validates the SAML message.
            </summary>
            <param name="messageContainer">The SAML message container.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidator.ValidateDestination(System.Uri,Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Validates the Destination of the message.
            </summary>
            <param name="destination">The message's destination.</param>
            <param name="messageContainer">The SAML message container.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidator.ValidateInResponseTo(Microsoft.IdentityModel.Tokens.Saml2.Saml2Id,Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Validates that InResponseTo matches to the request Id.
            </summary>
            <param name="inResponseTo">The InResponseTo from the response.</param>
            <param name="messageContainer">The SAML message container.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidator.ValidateIssueInstant(System.DateTime,Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Validates the IssueInstant of the SAML message.
            </summary>
            <param name="issueInstant">The IssueInstant of the SAML message.</param>
            <param name="messageContainer">The SAML message container.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidator.ValidateIssuer(Microsoft.IdentityModel.Tokens.Saml2.Saml2NameIdentifier,Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Validates issuer of the SAML message.
            </summary>
            <param name="issuer">The issuer of the SAML message.</param>
            <param name="messageContainer">The SAML message container.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidator.ValidateLogoutRequest(Microsoft.IdentityModel.Protocols.Saml2.LogoutRequest,Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Validates a LogoutRequest message.
            </summary>
            <param name="request">The LogoutRequest message.</param>
            <param name="messageContainer">The SAML message container.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidator.ValidateLogoutResponse(Microsoft.IdentityModel.Protocols.Saml2.LogoutResponse,Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Validates a LogoutResponse message.
            </summary>
            <param name="response">The LogoutResponse message.</param>
            <param name="messageContainer">The SAML message container.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidator.ValidateRelayState(System.String,Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Validates the RelayState on the SAML message.
            </summary>
            <remarks>For web-based bindings, relay state is limited to 80 characters. See [SamlBind, 3.4.3, 3.5.3] for more details.</remarks>
            <param name="relayState">The relay state.</param>
            <param name="messageContainer">The SAML message container.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidator.ValidateResponse(Microsoft.IdentityModel.Protocols.Saml2.Response,Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Validates a Response message.
            </summary>
            <param name="response">The Response message.</param>
            <param name="messageContainer">The SAML message container.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidator.ValidateSignatureRequirements(System.IdentityModel.Tokens.SigningCredentials,Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Validates message signature requirements.
            </summary>
            <param name="signingCredentials">The Signing credentials of the SAML message.</param>
            <param name="messageContainer">The SAML message container.</param>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer">
            <summary>
            The <c>HttpRedirectBindingSerializer</c> serializes and deserializes SAML protocol messages
            for the HTTP Redirect Binding.
            </summary>
            <remarks>See [SamlBind, 3.4] for more details.</remarks>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer">
            <summary>
            The <c>HttpBindingSerializer</c> class serializes and deserializes SAML protocol messages
            for the HTTP-based SAML bindings.
            </summary>
            <remarks>See [SamlBind, 3.4, 3.5, 3.6] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.DecodeMessage(System.String)">
            <summary>
            Applies binding specific decoding to a SAML message.
            </summary>
            <param name="encodedSamlMessage">The base64-encoded message.</param>
            <returns>The decoded message.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)">
            <summary>
              Creates a SAML binding message from a NameValueCollection of parameters.
            </summary>
            <param name="baseUrl">BaseUrl to which the message is intended.</param>
            <param name="collection">NameValueCollection of the parameters.</param>
            <exception cref="T:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException">When the collection does not contain parameters to build a valid SAML binding message</exception>
            <returns>Instance of SAML binding message or null if a message cannot be constructed.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.EncodeMessage(System.String)">
            <summary>
            Applies binding specific encoding to a SAML message.
            </summary>
            <param name="samlMessage">The message to be encoded.</param>
            <returns>The encoded message.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer"/> class.
            </summary>
            <param name="protocolBinding">The binding this serializer can serialize.</param>
            <remarks>This serializer will not be able to verify signatures on incoming messages or decrypt encrypted content.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.#ctor(System.Uri,Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer"/> class.
            </summary>
            <param name="protocolBinding">The binding this serialize can serialize.</param>
            <param name="saml2ProtocolSerializer">The SAML protocol serializer to be used during serialization.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.ReadProtocolMessage(System.String)">
            <summary>
              Reads the SAML protocol message from the serialized string encoded using this binding.
            </summary>
            <param name = "encodedSamlMessage">The encoded protocol request XML.</param>
            <returns>The SAML protocol message that was decoded and deserialized.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.WriteProtocolMessage(Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Serializes and encodes a SAML protocol message.
            </summary>
            <param name = "samlMessage">The SAML protocol message to be written.</param>
            <returns>The serialized and encoded SAML message.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.Deserialize(Microsoft.IdentityModel.Protocols.Saml2.HttpMessage)">
            <summary>
            Performs XML deserialization and signature checking on the incoming HttpMessage.
            </summary>
            <param name="httpMessage">The incoming message to be deserialized.</param>
            <returns>A message container with the deserialized message.</returns>
            <exception cref="T:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException">The state of the HttpMessage is invalid for this binding.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.DeserializeCore(Microsoft.IdentityModel.Protocols.Saml2.HttpMessage)">
            <summary>
            Extracts SAML message from the HttpMessage.
            </summary>
            <param name="httpMessage">The incoming message to be deserialized.</param>
            <returns>The deserialized SAML message.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.Serialize(Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Serializes from the object model to a format ready for transport on an HTTP channel.
            </summary>
            <param name = "messageContainer">The message container with the SAML message to serialize.</param>
            <returns>An HttpMessage that can be written to the HttpResponse stream.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.TryReadHttpMessage(System.Web.HttpRequestBase,Microsoft.IdentityModel.Protocols.Saml2.HttpMessage@)">
            <summary>
            Tries to read a SAML message from an HttpRequest object.
            </summary>
            <param name="request">The HttpRequest to read from.</param>
            <param name="httpMessage">A variable that will receive the SAML message obtained from the request.</param>
            <returns>true, if read was successful; otherwise, false.</returns>
            <details>
            This method does not throw if request is not recognized as a SAML message.
            </details>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.WriteHttpMessage(System.Web.HttpResponseBase,Microsoft.IdentityModel.Protocols.Saml2.HttpMessage)">
            <summary>
            Writes a SAML message to an HttpResponse object.
            </summary>
            <param name="response">The HttpResponse to write to.</param>
            <param name="httpMessage">The SAML message to write.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.EnforceRelayStateCheck">
            <summary>
            Gets or sets a value indicating whether RelayState tampering check is enforced.
            Id flag is set then RelayState from response must match RelayState in corresponding request.
            </summary>
            <value>Whether or not RelayState must be checked.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.ProtocolBinding">
            <summary>
            Gets the Uri that identifies the SAML binding this serializer supports.
            </summary>
            <value>The SAML binding this serializer supports.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.RequestStateStorage">
            <summary>
            Gets or sets storage for request state.
            </summary>
            <value>The request state storage.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.RequestStateStorageExpirationPeriod">
            <summary>
            Gets or sets expiration interval for the request tracking data storage.
            </summary>
            <value>The expiration interval for the request tracking data storage.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer.Saml2ProtocolSerializer">
            <summary>
            Gets the protocol serializer this serializer uses.
            </summary>
            <value>The protocol serializer this serializer uses.</value>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.MaxRedirectMessageSize">
            <summary>
            The maximum size of a message received via the redirect binding.
            </summary>
            <remarks>This is not a SAML requirement; it is a defense against decompression bomb attacks.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.MapAlgorithmToOIDName(System.String)">
            <summary>
            Works around limitations in the .NET crypto suite.
            </summary>
            <param name="algorithm">The XMLDsig algorithm name.</param>
            <returns>The OID of the signature hash algorithm.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.ComputeQueryStringHash(System.String)">
            <summary>
            Computes the hash of the query string according to [SamlBind] 3.4.4.1.
            </summary>
            <param name="query">The raw query string to be hashed.</param>
            <returns>The hash based on query string parameters.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.DecodeMessage(System.String)">
            <summary>
            Applies binding specific decoding to a SAML message.
            </summary>
            <param name="encodedSamlMessage">The base64-encoded message.</param>
            <returns>The decoded message.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.EncodeMessage(System.String)">
            <summary>
            Applies binding specific encoding to a SAML message.
            </summary>
            <param name="samlMessage">The message to be encoded.</param>
            <returns>The encoded message.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer"/> class.
            </summary>
            <remarks>This serializer will not be able to verify signatures on incoming messages or decrypt encrypted content.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer"/> class.
            </summary>
            <param name="saml2ProtocolSerializer">The <c>Saml2ProtocolSerializer</c> to be used during serialization.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer"/> class.
            </summary>
            <param name="signatureTokenResolver">The <c>SecurityTokenResolver</c> to use when resolving signing tokens.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer"/> class.
            </summary>
            <param name="saml2ProtocolSerializer">The <c>Saml2ProtocolSerializer</c> to be used during serialization.</param>
            <param name="signatureTokenResolver">The <c>SecurityTokenResolver</c> to use when resolving signing tokens.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.Deserialize(Microsoft.IdentityModel.Protocols.Saml2.HttpMessage)">
            <summary>
            Performs XML deserialization and signature checking on the incoming HttpMessage.
            </summary>
            <param name="httpMessage">The incoming message to be deserialized.</param>
            <returns>A message container with the deserialized message.</returns>
            <exception cref="T:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException">When the state of the HttpMessage is invalid for this binding.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.Serialize(Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Serializes from the object model to a format ready for transport on an HTTP channel.
            </summary>
            <param name = "messageContainer">The message container with the SAML message to serialize.</param>
            <returns>An HttpMessage that can be written to the HttpResponse stream.</returns>     
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.TryReadHttpMessage(System.Web.HttpRequestBase,Microsoft.IdentityModel.Protocols.Saml2.HttpMessage@)">
            <summary>
            Tries to read a SAML message from an HttpRequest object.
            </summary>
            <param name="request">The HttpRequest to read from.</param>
            <param name="httpMessage">A variable that will receive the SAML message obtained from the request.</param>
            <returns>true, if read was successful; otherwise, false.</returns>
            <details>
            This method does not throw if request is not recognized as a SAML message.
            </details>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.WriteHttpMessage(System.Web.HttpResponseBase,Microsoft.IdentityModel.Protocols.Saml2.HttpMessage)">
            <summary>
            Writes a SAML message to an HttpResponse object.
            </summary>
            <param name="response">The HttpResponse to write to.</param>
            <param name="httpMessage">The SAML message to write.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.SignatureTokenResolver">
            <summary>
            Gets the security token resolver that is used to validate SAML message signatures.
            </summary>
            <value>The security token resolver that is used to validate SAML message signatures.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.HttpRedirectBindingSerializer.DeflateEncoding">
            <summary>
            Gets the Deflate encoding specified in [SamlBind, 3.4.4.1].
            </summary>
            <value>The Deflate encoding constant.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.HttpArtifactBindingSerializer">
            <summary>
            The <c>HttpArtifactBindingSerializer</c> class serializes and deserializes SAML protocol messages
            for the HTTP Artifact Binding.
            </summary>
            <remarks>See [SamlBind, 3.6] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpArtifactBindingSerializer.#ctor(Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpArtifactBindingSerializer"/> class.        
            </summary>
            <param name="artifactResolutionClient">The artifact resolution client used to resolve artifacts from incoming messages.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpArtifactBindingSerializer.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer,Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpArtifactBindingSerializer"/> class.        
            </summary>
            <param name="saml2ProtocolSerializer">The SAML protocol serializer to be used during serialization.</param>
            <param name="artifactResolutionClient">The artifact resolution client used to resolve artifacts from incoming messages.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpArtifactBindingSerializer.DeserializeCore(Microsoft.IdentityModel.Protocols.Saml2.HttpMessage)">
            <summary>
            Extracts SAML message from the HttpMessage.
            </summary>
            <param name="httpMessage">The incoming message to be deserialized.</param>
            <returns>The deserialized SAML message.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpArtifactBindingSerializer.Serialize(Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Serializes from the object model to a format ready for transport on an HTTP channel.
            </summary>
            <param name = "messageContainer">The message container with the SAML message to serialize.</param>
            <returns>An HttpMessage that can be written to the HttpResponse stream.</returns>        
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpArtifactBindingSerializer.TryReadHttpMessage(System.Web.HttpRequestBase,Microsoft.IdentityModel.Protocols.Saml2.HttpMessage@)">
            <summary>
            Tries to read a SAML message from an HttpRequest object.
            </summary>
            <param name="request">The HttpRequest to read from.</param>
            <param name="httpMessage">A variable that will receive the SAML message obtained from the request.</param>
            <returns>true, if read was successful; otherwise, false.</returns>
            <details>
            This method does not throw if request is not recognized as a SAML message.
            </details>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpArtifactBindingSerializer.WriteHttpMessage(System.Web.HttpResponseBase,Microsoft.IdentityModel.Protocols.Saml2.HttpMessage)">
            <summary>
            Writes a SAML message to an HttpResponse object.
            </summary>
            <param name="response">The HttpResponse to write to.</param>
            <param name="httpMessage">The SAML message to write.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.HttpArtifactBindingSerializer.ArtifactResolutionClient">
            <summary>
            Gets the artifact resolution client used to resolve artifacts from incoming messages.
            </summary>
            <value>The artifact resolution client used to resolve artifacts from incoming messages.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.LoggedOutSessionStorage">
            <summary>
            The <c>LoggedOutSessionStorage</c> class tracks logged out sessions and prevents an otherwise valid assertion 
            from being accepted if it has been previously logged out.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.LoggedOutSessionStorage.#ctor(Microsoft.IdentityModel.BoundedCache{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.LoggedOutSessionStorage"/> class.
            </summary>
            <param name="storage">The backing storage provider to use.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.LoggedOutSessionStorage.AddLoggedOutSession(Microsoft.IdentityModel.Protocols.Saml2.LogoutRequest)">
            <summary>
            Adds a session to the list of logged out sessions.
            </summary>
            <param name="request">The request whose session is be logged out.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.LoggedOutSessionStorage.IsSessionLoggedOut(System.String,Microsoft.IdentityModel.Tokens.Saml2.Saml2NameIdentifier,System.String)">
            <summary>
            Determines whether or not a given session has been logged out.
            </summary>
            <param name="issuer">The unique identifier of the issuer of the assertion.</param>
            <param name="subject">The identifier of the subject of the assertion.</param>
            <param name="index">The session index to check.</param>
            <returns>true if the session has previously been logged out; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.CustomHttpBindingParameters">
            <summary>
            The <c>CustomHttpBindingParameters</c> class contains constants for custom parameters in SAML HTTP object 
            properties.
            </summary>
            <remarks>These parameters MUST NOT be exposed to HTTP level.
            </remarks>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.Reasons">
            <summary>
            The <c>Reasons</c> class contains constants describing the circumstances of a logout as defined in [SamlCore, 3.7.3]. 
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.Reasons.Admin">
            <summary>
            Specifies that the message is being sent because an administrator
            wishes to terminate the indicated session for that principal. 
            See [SamlCore, 3.7.3] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.Reasons.GlobalTimeout">
            <summary>
            Specifies that the message is being sent because of the 
            global session timeout interval period being exceeded. 
            See [SamlCore, 3.7.3.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.Reasons.SPTimeout">
            <summary>
            Specifies that the message is being sent because a timeout interval
            period agreed between a participant and the session authority has been exceeded.
            See [SamlCore, 3.7.3.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.Reasons.User">
            <summary>
            Specifies that the message is being sent because the principal 
            wishes to terminate the indicated session.
            See [SamlCore, 3.7.3] for more details.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipantStorage">
            <summary>
            The <c>SessionParticipantStorage</c> class provides methods to add, remove and enumerate the participants in a SAML session.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipantStorage.GetParticipantIdentifier(System.String,System.UInt32)">
            <summary>
            Formulates a unique identifier with which to reference a participant.
            </summary>
            <param name="userId">The user's unique identifier.</param>
            <param name="id">An available index.</param>
            <returns>A unique identifier with which to reference a participant.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipantStorage.#ctor(Microsoft.IdentityModel.BoundedCache{System.String},Microsoft.IdentityModel.BoundedCache{Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipantStorage"/> class.
            </summary>
            <param name="userIdStorage">The user ID storage. See remarks for additional details.</param>
            <param name="participantStorage">The session participant storage.</param>
            <remarks>The user ID storage must have special semantics for the "FedId" key.  This key should be such
            that it can contain different values per user. One implementation that satisfies this requirement is storing
            the value for this key in the user's cookies.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipantStorage.AddParticipant(Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant)">
            <summary>
            Adds the given participant to the user's session.
            </summary>
            <param name="participant">The participant to be added.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipantStorage.GetOrCreateUserId">
            <summary>
            Returns a string identifying the current user; if no string currently exists, one will be created and stored 
            in the appropriate storage before being returned.
            </summary>
            <returns>A string identifying the current user.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipantStorage.GetParticipants">
            <summary>
            Returns a list of the user's currently logged-in SAML sessions.
            </summary>
            <returns>A list of the user's currently logged-in SAML sessions.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipantStorage.GetUserIndexes(System.String)">
            <summary>
            Gets the list of indexes of participants in the user's session.
            </summary>
            <param name="userId">The user's unique identifier.</param>
            <returns>The list of indexes of participants in the user's session.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipantStorage.RemoveParticipant(Microsoft.IdentityModel.Protocols.Saml2.SessionParticipant)">
            <summary>
            Removes the given participant from the user's list of currently logged in SAML sessions.
            </summary>
            <param name="participant">The participant to remove.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SessionParticipantStorage.SetUserIndexes(System.String,System.Collections.Generic.List{System.UInt32})">
            <summary>
            Updates the user's list of session indexes.
            </summary>
            <param name="userId">The user's unique identifier.</param>
            <param name="indexes">The list of indexes.</param>
        </member>
        <member name="T:Microsoft.IdentityModel.Web.Configuration.MicrosoftIdentityModelSamlSection">
            <summary>
            The <c>MicrosoftIdentityModelSamlSection</c> class provides SAML-specific configuration under the microsoft.identityModel.saml section.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Web.Configuration.MicrosoftIdentityModelSamlSection.Current">
            <summary>
            Gets the current <see cref="T:Microsoft.IdentityModel.Web.Configuration.MicrosoftIdentityModelSamlSection"/> reference.
            </summary>
            <value>The current <see cref="T:Microsoft.IdentityModel.Web.Configuration.MicrosoftIdentityModelSamlSection"/> reference.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Web.Configuration.MicrosoftIdentityModelSamlSection.IdentityProviders">
            <summary>
            Gets the list of identity providers that this provider trusts.
            </summary>
            <value>The list of identity providers that this provider trusts.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Web.Configuration.MicrosoftIdentityModelSamlSection.Metadata">
            <summary>
            Gets the address of the file containing this provider's SAML metadata.
            </summary>
            <value>The address of the file containing this provider's SAML metadata.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedBindingException">
            <summary>
            The <c>UnsupportedBindingException</c> class indicates that a binding is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedBindingException.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedBindingException"/> class.
            </summary>
            <param name="protocolBinding">The binding that is unsupported.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedBindingException.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedBindingException"/> class.
            </summary>
            <param name="protocolBinding">The binding that is unsupported.</param>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedBindingException.#ctor(System.Uri,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedBindingException"/> class.
            </summary>
            <param name="protocolBinding">The binding that is unsupported.</param>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedBindingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedBindingException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">An object that describes the source or destination of the serialized data.</param>        
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedBindingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the System.Runtime.Serialization.SerializationInfo with information about the exception.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedBindingException.ProtocolBinding">
            <summary>
            Gets the binding that the message was received on or will be sent on.
            </summary>
            <value>The binding that the message was received on or will be sent on.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService">
            <summary>
            The <c>SingleLogoutService</c> class implements a SAML single logout service.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2Service">
            <summary>
            The <c>Saml2Service</c> class provides common methods for all SAML service implementations.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2Service.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2Service"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2Service.CanProcess(Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Determines whether or not this service can process the incoming SAML message.
            </summary>
            <param name="messageContainer">The incoming SAML message with related data.</param>
            <returns>true if can process; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2Service.Process(Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Processes the incoming SAML message.
            </summary>
            <param name="messageContainer">The incoming SAML message with related data.</param>
            <returns>Returns the outgoing SAML message with related data; null if no outgoing message is required.</returns>
            <exception cref="T:System.ArgumentNullException">The messageContainer is null</exception>
            <exception cref="T:System.InvalidOperationException">The incoming message cannot be processed.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2Service.ProcessCore(Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            When overridden in a derived class, process incoming SAML message.
            </summary>
            <param name="messageContainer">The SAML message with related data.</param>
            <returns>Returns outgoing SAML message with related data.</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2Service.SupportedOutgoingBindings">
            <summary>
            Gets the set of bindings this service should prefer when generating outgoing SAML messages.
            </summary>
            <value>The set of bindings this service prefers when generating outgoing SAML messages.</value>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.#ctor(Microsoft.IdentityModel.Protocols.Saml2.SessionParticipantStorage,Microsoft.IdentityModel.Protocols.Saml2.LoggedOutSessionStorage,Microsoft.IdentityModel.Protocols.Saml2.EntityConfiguration,Microsoft.IdentityModel.Protocols.Saml2.MessageValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService"/> class.
            </summary>
            <param name="sessionParticipantStorage">The set of signed in sessions.</param>
            <param name="loggedOutSessionStorage">The set of logged out sessions.</param>
            <param name="entityConfiguration">The set of known SAML partners.</param>
            <param name="validator">The <c>MessageValidator</c> to use when validating incoming messages.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.CanProcess(Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Determines whether the <c>SingleLogoutService</c> can process the incoming SAML message.
            </summary>
            <param name="messageContainer">The incoming SAML message with context.</param>
            <returns>true, if the message is a <c>LogoutRequest</c> or <c>LogoutResponse</c>.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.OnSignedOut(Microsoft.IdentityModel.Protocols.Saml2.SignedOutEventArgs)">
            <summary>
            Raises the SignedOut event.
            </summary>
            <param name="args">The <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SignedOutEventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.OnSignOutError(Microsoft.IdentityModel.Web.Controls.ErrorEventArgs)">
            <summary>
            Raises the SignOutError event.
            </summary>
            <param name="args">The <see cref="T:Microsoft.IdentityModel.Web.Controls.ErrorEventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.ProcessCore(Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Processes the incoming SAML message.
            </summary>
            <param name="messageContainer">The incoming SAML message with context.</param>
            <returns>If a <c>LogoutRequest</c> was received, a message container with a <c>LogoutResponse</c> will be returned.</returns>
            <remarks>This method does not throw except for fatal exceptions. Errors are communicated via the SignOutError event.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.SelectSingleLogoutEndpoint(System.String,System.Collections.Generic.IEnumerable{Microsoft.IdentityModel.Protocols.WSFederation.Metadata.ProtocolEndpoint})">
            <summary>
            Selects the endpoint to send logout messages to.
            </summary>
            <param name="entityId">The identifier of the partner to which the message is being sent.</param>
            <param name="endpoints">The set of logout endpoints from which to choose.</param>
            <returns>The <see cref="T:Microsoft.IdentityModel.Protocols.WSFederation.Metadata.ProtocolEndpoint"/> to which the message will be sent.</returns>
            <exception cref="T:System.InvalidOperationException">When no supported endpoints are available.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.SignOut(System.String)">
            <summary>
            Initiates sign-out of all SAML participants.
            </summary>
            <param name="returnUrl">The page to redirect the user to upon completion of sign-out.</param>
            <returns>An <c>OutgoingMessageContainer</c>c&gt; with a request message to be sent if there are active participants.  If there are no participants, returns null.</returns>
            <remarks>The caller should redirect the user to the appropriate URL if this function returns null.</remarks>
            <exception cref="T:System.ArgumentException">When returnUrl is null or empty.</exception>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.EntityConfiguration">
            <summary>
            Gets the set of known SAML partners.
            </summary>
            <value>The set of known SAML partners.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.LoggedOutSessionStorage">
            <summary>
            Gets the set of previously logged out sessions.
            </summary>
            <value>The set of previously logged out sessions.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.MessageValidator">
            <summary>
            Gets the <see cref="P:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.MessageValidator"/> used to validate incoming messages.
            </summary>
            <value>The <see cref="P:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.MessageValidator"/> used to validate incoming messages.</value>
        </member>
        <member name="E:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.SignedOut">
            <summary>
            Occurs when the user is signed out.
            </summary>
        </member>
        <member name="E:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.SignOutError">
            <summary>
            Occurs when a signout error has occurred.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SingleLogoutService.SessionParticipantStorage">
            <summary>
            Gets the set of active SAML sessions.
            </summary>
            <value>The set of active SAML sessions.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer">
            <summary>
            The <c>Saml2ProtocolSerializer</c> serializes and deserializes XML elements representing SAML messages to and from their representation in the
            object model.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.CreatePlaintextReader(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Selectors.SecurityTokenSerializer,Microsoft.IdentityModel.SecurityTokenService.EncryptingCredentials@)">
            <summary>
            This function duplicates Saml2Assertion's CreatePlaintextReader via EncryptedSecurityTokenHandler.
            This function can go away if the WIF runtime eventually exposes such a function.
            </summary>
            <param name="encryptedReader">An XmlReader positioned on an EncryptedData element.</param>
            <param name="encryptionTokenResolver">The SecurityTokenResolver to use when resolving encrypted keys.</param>
            <param name="keyInfoSerializer">The SecurityTokenSerializer to use when deserializing KeyInfo elements.</param>
            <param name="encryptingCredentials">A variable that receives the EncryptingCredentials used to encrypt the EncryptedData element.</param>
            <returns>An XmlReader positioned on the decrypted XML element.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadSimpleNCNameElement(System.Xml.XmlReader)">
            <summary>
            Reads an element with simple content NCName.
            </summary>
            <param name="reader">An XmlReader positioned on the opening tag of an element that contains an NCName.</param>
            <returns>The Saml2Id contained in the element.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer"/> class.  The serializer will not attempt to validate signatures, and will
            throw if incoming messages are encrypted.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer"/> class.
            </summary>
            <remarks>The serializer will not be able to decrypt incoming messages.</remarks>
            <param name="signatureTokenResolver">The resolver to use when resolving security tokens used in XML signatures. Use null to indicate signatures should not be validated.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer"/> class.
            </summary>
            <param name="signatureTokenResolver">The resolver to use when resolving security tokens used in XML signatures. Use null to indicate signatures should not be validated.</param>
            <param name="encryptionTokenResolver">The resolver to use when resolving security tokens used in XML encryption.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Selectors.SecurityTokenSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer"/> class.
            </summary>
            <param name="signatureTokenResolver">The resolver to use when resolving security tokens used in XML signatures. Use null to indicate signatures should not be validated.</param>
            <param name="encryptionTokenResolver">The resolver to use when resolving security tokens used in XML encryption.</param>
            <param name="keyInfoSerializer">The serializer to use when serializing ds:KeyInfo elements.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.CanReadMessage(System.Xml.XmlReader)">
            <summary>
            Determines if an <c>XmlReader</c> is positioned on what looks like a SAML protocol message.
            </summary>
            <param name="reader">An <c>XmlReader</c> instance.</param>
            <returns>True if the <c>XmlReader</c> is positioned on an opening tag of a SAML protocol message; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.CreateEnvelopedSignatureReader(System.Xml.XmlReader,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Creates an <c>EnvelopedSignatureReader</c> to validate the signature of a signed XML element.
            </summary>
            <param name="reader">The non-validating <c>XmlReader</c> to be wrapped.</param>
            <param name="message">The SAML message that is being deserialized.</param>
            <returns>A new reader that can recognize and validate the signature.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.CreateEnvelopedSignatureWriter(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Creates an <c>EnvelopedSignatureWriter</c> if the message contains <c>SigningCredentials</c> and proper Id.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to be wrapped.</param>
            <param name="message">The SAML message that is being serialized.</param>
            <returns>A new <c>XmlWriter</c> that should be used to produce signed message.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadAction(System.Xml.XmlReader)">
            <summary>
            Deserializes a saml:Action element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a saml:Action element.</param>
            <returns>The deserialized <c>Saml2Action</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadArtifact(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:Artifact element.
            </summary>
            <param name="reader">An <c>XmlReader</c> on the samlp:Artifact opening tag.</param>
            <returns>The base64-encoded artifact that is being requested.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadArtifactResolve(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:ArtifactResolve element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on a samlp:ArtifactResolve opening tag.</param>
            <returns>Returns a <c>ArtifactResolve</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadArtifactResponse(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:ArtifactResponse message.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a samlp:ArtifactResponse element.</param>
            <returns>An <c>ArtifactResponse</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadAssertion(System.Xml.XmlReader)">
            <summary>
            Deserializes a saml:Assertion or saml:EncryptedAssertion.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a saml:Assertion or saml:EncryptedAssertion element.</param>
            <returns>The deserialized <c>Saml2Assertion</c>.</returns>
            <remarks>This method does not validate the token.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadAssertionIDRequest(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:AssertionIDRequest.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a samlp:AssertionIDRequest element.</param>
            <returns>The deserialized <c>AssertionIdRequest</c>.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadAttribute(System.Xml.XmlReader)">
            <summary>
            Deserializes a saml:Attribute.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a samlp:Attribute element.</param>
            <returns>The deserialized <c>Saml2Attribute</c>.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadAttributeQuery(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:AttributeQuery.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a samlp:AttributeQuery element.</param>
            <returns>The deserialized <c>AttributeQuery</c>.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadAuthnQuery(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:AuthnQuery.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a samlp:AuthnQuery element.</param>
            <returns>The deserialized <c>AuthenticationQuery</c>.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadAuthnRequest(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:AuthnRequest message.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a samlp:AuthnRequest element.</param>
            <returns>An <c>AuthenticationRequest</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadAuthzDecisionQuery(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:AuthzDecisionQuery.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a samlp:AuthzDecisionQuery element.</param>
            <returns>The deserialized <c>AuthorizationDecisionQuery</c>.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadCommonAttributes(System.Xml.XmlReader,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Deserializes the attributes found on all SAML protocol messages.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a SAML protocol message.</param>
            <param name="message">The <c>Saml2Message</c> object to update.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadCommonElements(System.Xml.XmlReader,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Reads the common child elements of all SAML protocol messages.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the &lt;Issuer&gt; opening tag.</param>
            <param name="message">The <c>Saml2Message</c> object to update.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadConditions(System.Xml.XmlReader)">
            <summary>
            Deserializes a saml:Conditions element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a saml:Conditions element.</param>
            <returns>The deserialized <c>Saml2Conditions</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadEvidence(System.Xml.XmlReader)">
            <summary>
            Deserializes a saml:Evidence element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a saml:Evidence element.</param>
            <returns>The deserialized <c>Saml2Evidence</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadExtensions(System.Xml.XmlReader,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Deserializes a samlp:Extensions element.
            </summary>
            <remarks>By default, this skips the element and traces an Information </remarks>
            <param name="reader">An <c>XmlReader</c> positioned on a samlp:Extensions opening tag.</param>
            <param name="message">The <c>Saml2Message</c> object to update with extensions.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadIDPEntry(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:IDPEntry element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on a samlp:IDPEntry opening tag.</param>
            <returns>Returns a <c>IdentityProviderEntry</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadIDPList(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:IDPList element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on a samlp:IDPList opening tag.</param>
            <returns>Returns a <c>IdentityProviderCollection</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadIssuer(System.Xml.XmlReader)">
            <summary>
            Deserializes a saml:Issuer tag.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on an opening tag of a saml:Issuer element.</param>
            <returns>A <c>Saml2NameIdentifier</c> representing the issuer.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadLogoutRequest(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:LogoutRequest element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on a samlp:LogoutRequest opening tag.</param>
            <returns>Returns a <c>LogoutRequest</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadLogoutResponse(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:LogoutResponse element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on a samlp:LogoutResponse opening tag.</param>
            <returns>Returns a <c>LogoutResponse</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadManageNameIDRequest(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:ManageNameIDRequest.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a samlp:ManageNameIDRequest element.</param>
            <returns>The deserialized <c>ManageNameIdRequest</c>.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadManageNameIDResponse(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:ManageNameIDResponse.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a samlp:ManageNameIDResponse element.</param>
            <returns>The deserialized <c>ManageNameIdResponse</c>.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadMessage(System.Xml.XmlReader)">
            <summary>
            Deserializes a SAML protocol message.
            </summary>
            <param name="reader">An instance of an <c>XmlReader</c> positioned on the opening tag of the SAML protocol message.</param>
            <returns>The deserialized protocol message.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadNameID(System.Xml.XmlReader,System.String)">
            <summary>
            Deserializes a saml:NameId or saml:EncryptedId element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a saml:NameId or saml:EncryptedId element.</param>
            <param name="parentElement">The local name of this element's parent element.</param>
            <returns>The deserialized <c>Saml2NameIdentifier</c>.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadNameIDMappingRequest(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:NameIDMappingRequest.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a samlp:NameIDMappingRequest element.</param>
            <returns>The deserialized <c>NameIdMappingRequest</c>.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadNameIDMappingResponse(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:NameIDMappingResponse.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a samlp:NameIDMappingResponse element.</param>
            <returns>The deserialized <c>NameIdMappingResponse</c>.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadNameIDPolicy(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:NameIDPolicy element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on a samlp:NameIDPolicy opening tag.</param>
            <returns>Returns a <c>NameIdentifierPolicy</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadNewID(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:NewID or samlp:NewEncryptedID element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a samlp:NewID or samlp:NewEncryptedID element.</param>
            <returns>The deserialized <c>NewNameIdentifier</c>.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadRequestedAuthnContext(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:RequestedAuthnContext element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on a samlp:RequestedAuthnContext opening tag.</param>
            <returns>Returns a <c>RequestedAuthenticationContext</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadResponse(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:Response element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on a samlp:Response opening tag.</param>
            <returns>Returns a <c>Response</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadScoping(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:Scoping element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on a samlp:Scoping opening tag.</param>
            <returns>Returns a <c>Scoping</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadStatus(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:Status element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on a samlp:Status opening tag.</param>
            <returns>Returns a <c>Status</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadStatusCode(System.Xml.XmlReader)">
            <summary>
            Deserializes a samlp:StatusCode element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on a samlp:StatusCode opening tag.</param>
            <returns>Returns a <c>StatusCode</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.ReadSubject(System.Xml.XmlReader)">
            <summary>
            Deserializes a saml:Subject element.
            </summary>
            <param name="reader">An <c>XmlReader</c> positioned on the opening tag of a saml:Subject element.</param>
            <returns>The deserialized <c>Saml2Subject</c> object.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteAction(System.Xml.XmlWriter,Microsoft.IdentityModel.Tokens.Saml2.Saml2Action)">
            <summary>
            Serializes a saml:Action element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="action">The <c>Saml2Action</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteArtifact(System.Xml.XmlWriter,System.String)">
            <summary>
            Serializes a samlp:Artifact element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="artifact">The artifact to be serialized.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteArtifactResolve(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolve)">
            <summary>
            Serializes a samlp:ArtifactResolve element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>ArtifactResolve</c> message to be serialized.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteArtifactResponse(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.ArtifactResponse)">
            <summary>
            Serializes a samlp:ArtifactResponse element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>ArtifactResponse</c> message to be serialized.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteAssertion(System.Xml.XmlWriter,Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion)">
            <summary>
            Serializes a saml:Assertion or saml:EncryptedAssertion element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="assertion">The <c>Saml2Assertion</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteAssertionIDRequest(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.AssertionIdRequest)">
            <summary>
            Serializes a samlp:AssertionIDRequest element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>AssertionIdRequest</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteAttribute(System.Xml.XmlWriter,Microsoft.IdentityModel.Tokens.Saml2.Saml2Attribute)">
            <summary>
            Serializes a saml:Attribute element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="attribute">The <c>Saml2Attribute</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteAttributeQuery(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.AttributeQuery)">
            <summary>
            Serializes a samlp:AttributeQuery element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>AttributeQuery</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteAuthnQuery(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.AuthenticationQuery)">
            <summary>
            Serializes a samlp:AuthnQuery element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>AuthenticationQuery</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteAuthnRequest(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest)">
            <summary>
            Serializes a samlp:AuthnRequest.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize the message to.</param>
            <param name="message">The <c>AuthenticationRequest</c> to be serialized.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteAuthzDecisionQuery(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.AuthorizationDecisionQuery)">
            <summary>
            Serializes a samlp:AuthzDecisionQuery element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>AuthorizationDecisionQuery</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteCommonAttributes(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Writes attributes common to all SAML messages.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>Saml2Message</c> to be serialized.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteCommonElements(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Writes elements common to all SAML messages.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>Saml2Message</c> being serialized.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteConditions(System.Xml.XmlWriter,Microsoft.IdentityModel.Tokens.Saml2.Saml2Conditions)">
            <summary>
            Serializes a saml:Conditions element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="conditions">The <c>Saml2Conditions</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteEvidence(System.Xml.XmlWriter,Microsoft.IdentityModel.Tokens.Saml2.Saml2Evidence)">
            <summary>
            Serializes a saml:Evidence element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="evidence">The <c>Saml2Evidence</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteExtensions(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Serializes a samlp:Extensions element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>Saml2Message</c> whose extensions should be serialized.</param>
            <remarks>Implementers need to serialize the opening and closings Extensions tag in the SAML protocol namespace.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteIDPEntry(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.IdentityProviderEntry)">
            <summary>
            Serializes a samlp:IDPEntry element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="entry">The <c>IdentityProviderEntry</c> to be serialized.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteIDPList(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.IdentityProviderCollection)">
            <summary>
            Serializes a samlp:IDPList element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="identityProviders">The <c>IdentityProviderCollection</c> to be serialized.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteIssuer(System.Xml.XmlWriter,Microsoft.IdentityModel.Tokens.Saml2.Saml2NameIdentifier)">
            <summary>
            Serializes a saml:Issuer element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="issuer">The <c>Saml2Issuer</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteLogoutRequest(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.LogoutRequest)">
            <summary>
            Serializes a samlp:LogoutRequest element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>LogoutRequest</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteLogoutResponse(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.LogoutResponse)">
            <summary>
            Serializes a samlp:LogoutResponse element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>LogoutResponse</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteManageNameIDRequest(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.ManageNameIdRequest)">
            <summary>
            Serializes a samlp:ManageNameIDRequest element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>ManageNameIdRequest</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteManageNameIDResponse(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.ManageNameIdResponse)">
            <summary>
            Serializes a samlp:ManageNameIDResponse element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>ManageNameIdResponse</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteMessage(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Serializes a SAML protocol message.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize the message to.</param>
            <param name="message">The message to be serialized.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteNameID(System.Xml.XmlWriter,Microsoft.IdentityModel.Tokens.Saml2.Saml2NameIdentifier)">
            <summary>
            Serializes a saml:NameID element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="nameId">The <c>Saml2NameIdentifier</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteNameIDMappingRequest(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.NameIdMappingRequest)">
            <summary>
            Serializes a samlp:NameIDMappingRequest element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>NameIdMapppingRequest</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteNameIDMappingResponse(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.NameIdMappingResponse)">
            <summary>
            Serializes a samlp:NameIDMappingResponse element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>NameIdMappingResponse</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteNameIDPolicy(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.NameIdentifierPolicy)">
            <summary>
            Serializes a samlp:NameIDPolicy element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="nameIdPolicy">The <c>NameIdentifierPolicy</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteNewID(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.NewNameIdentifier)">
            <summary>
            Serializes a samlp:NewID or samlp:NewEncryptedID element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="newId">The <c>NewNameIdentifier</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteRequestedAuthnContext(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.RequestedAuthenticationContext)">
            <summary>
            Serializes a samlp:RequestedAuthnContext element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="requestedAuthnContext">The <c>RequestedAuthenticationContext</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteResponse(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.Response)">
            <summary>
            Serializes a samlp:Response element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>Response</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteScoping(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.Scoping)">
            <summary>
            Serializes a samlp:Scoping element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="scoping">The <c>Scoping</c> object to be serialized.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteStatus(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.Status)">
            <summary>
            Serializes a samlp:Status element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="status">The <c>Status</c> object to be serialized.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteStatusCode(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.StatusCode)">
            <summary>
            Serializes a samlp:StatusCode element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="statusCode">The <c>StatusCode</c> object to be serialized.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteStatusResponse(System.Xml.XmlWriter,Microsoft.IdentityModel.Protocols.Saml2.StatusResponse,System.String)">
            <summary>
            Helper function to serialize a response message that inherits from StatusResponseType and has
            no custom properties.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="message">The <c>StatusResponse</c> to be serialized.</param>
            <param name="localName">The XML local name of the element (e.g., <c>LogoutResponse</c>).</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WriteSubject(System.Xml.XmlWriter,Microsoft.IdentityModel.Tokens.Saml2.Saml2Subject)">
            <summary>
            Serializes a saml:Subject element.
            </summary>
            <param name="writer">The <c>XmlWriter</c> to serialize to.</param>
            <param name="subject">The <c>Saml2Subject</c> to serialize.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.SetSigningCredentials(System.Xml.XmlReader,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Sets <c>SigningCredentials</c> property if deserialized message was signed.
            </summary>
            <param name="reader">The <c>XmlReader</c> that the signed element is being read from.</param>
            <param name="message">The <c>Saml2Message</c> object to update with the <c>SigningCredentials</c>.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.EncryptionTokenResolver">
            <summary>
            Gets the <c>SecurityTokenResolver</c> to be used when resolving encrypted keys on incoming SAML messages.
            </summary>
            <value>The <c>SecurityTokenResolver</c> to be used when resolving encrypted keys on incoming SAML messages.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.HandleSignature">
            <summary>
            Gets a value indicating whether or not this serializer will validate signatures on the XML documents it deserializes.
            </summary>
            <value>Whether or not this serializer will validate signatures on the XML documents it deserializes.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.KeyInfoSerializer">
            <summary>
            Gets the <c>SecurityTokenSerializer</c> to use when serializing KeyInfo clauses.
            </summary>
            <remarks>
            Defaults to a serializer that can write X509RawData certificates and can read encrypted keys.
            </remarks>
            <value>The <c>SecurityTokenSerializer</c> to use when serializing KeyInfo clauses.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.SignatureTokenResolver">
            <summary>
            Gets the <c>SecurityTokenResolver</c> to be used when resolving signatures on incoming SAML messages.
            </summary>
            <value>The <c>SecurityTokenResolver</c> to be used when resolving signatures on incoming SAML messages.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.GenericXmlSecurityTokenHandler">
            <summary>
            This class is used to decrypt NewEncryptedIDs.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.GenericXmlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
            <summary>
            Returns whether or not this serializer can read the token the XmlReader is positioned on.
            </summary>
            <param name="reader">The XmlReader to read the token from.</param>
            <returns>True always: any XML is acceptable.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.GenericXmlSecurityTokenHandler.GetTokenTypeIdentifiers">
            <summary>
            Returns the token types this serializer can serialize.
            </summary>
            <returns>The token types this serializer can serialize.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.GenericXmlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
            <summary>
            Reads the token the XmlReader is positioned on.
            </summary>
            <param name="reader">An XmlReader positioned on an XML element tag.</param>
            <returns>A GenericXmlSecurityToken created from the element the reader was positioned on.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.GenericXmlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Writes the token to the XmlWriter.
            </summary>
            <param name="writer">The XmlWriter to write to.</param>
            <param name="token">The SecurityToken to be written.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.GenericXmlSecurityTokenHandler.TokenType">
            <summary>
            Returns the type of SecurityToken this handler can read/write.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.GenericXmlSecurityTokenHandler.CanWriteToken">
            <summary>
            Returns whether or not this serializer can write tokens.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.WrappedSerializer">
            <summary>
            A serializer that can construct a SecurityKeyIdentifierClause based off of the message issuer when no KeyInfo
            element is present.
            </summary>
            <remarks>
            This serializer implements only token reading and will throw on attempt to write.
            StyleCop suppression is for undocumented overrides on an internal class.
            </remarks>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer.EmptySecurityTokenResolver.Instance">
            <summary>
            Gets the global instance of EmptySecurityTokenResolver.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.IdentityProviderCollection">
            <summary>
            The <c>IdentityProviderCollection</c> class specifies the identity providers trusted by the requester to 
            authenticate the presenter.
            </summary>
            <remarks>See the samlp:IDPList element defined in [SamlCore, 3.4.1.3] for more details.</remarks>
            <details>
            If this collection is empty, it will not be serialized.
            </details>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.IdentityProviderCollection.GetComplete">
            <summary>
            Gets or sets a URI identifying a location where the complete list of Identity Providers can be retrieved
            from. See [SamlCore, 3.4.1.3] for more details.
            </summary>
            <value>A URI identifying a location where the complete list of Identity Providers can be retrieved
            from.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest">
            <summary>
            The <c>AuthenticationRequest</c> class requests an identity provider authenticate the user and return a 
            response with the user's claims.
            </summary>
            <remarks>See the samlp:AuthnRequest element defined in [SamlCore, 3.4.1] for more details.</remarks>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Request">
            <summary>
            The <c>Request</c> class contains information common to all SAML requests.
            </summary>
            <remarks>See the samlp:RequestAbstractType defined in [SamlCore, 3.2.1] for more details.</remarks>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest.AssertionConsumerServiceIndex">
            <summary>
            Gets or sets a value that indirectly identifies the location to which the Response message 
            should be returned to the requester.
            </summary>
            <remarks>See [SamlCore, 3.4.1] for more details.</remarks>
            <details>
            This property may not be set when either ProtocolBinding or 
            AssertionConsumingServiceUrl is set.
            </details>
            <value>A value that indirectly identifies the location to which the Response message 
            should be returned to the requester.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest.AssertionConsumerServiceUrl">
            <summary>
            Gets or sets the location to which the Response message MUST 
            be returned to the requester.
            </summary>
            <remarks>See [SamlCore, 3.4.1] for more details.</remarks>
            <details>
            This property may not be set when AssertionConsumerServiceIndex is
            set.
            </details>
            <value>The location to which the Response message MUST 
            be returned to the requester.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest.AttributeConsumingServiceIndex">
            <summary>
            Gets or sets a value that indirectly identifies the SAML attributes the requester desires or requires
            to be supplied by the identity provider in the Response message.
            </summary>
            <remarks>See [SamlCore, 3.4.1] for more details.</remarks>
            <value>A value that indirectly identifies the SAML attributes the requester desires or requires
            to be supplied by the identity provider in the Response message.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest.Conditions">
            <summary>
            Gets or sets the SAML conditions the requester expects to limit the
            validity and/or use of the resulting assertion. 
            </summary>
            <remarks>See [SamlCore, 3.4.1] for more details.</remarks>
            <value>The SAML conditions the requester expects to limit the
            validity and/or use of the resulting assertion.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest.ForceAuthentication">
            <summary>
            Gets or sets a value indicating whether the identity provider MUST authenticate the presenter 
            directly rather than rely on a previous security context.
            </summary>
            <remarks>See [SamlCore, 3.4.1] for more details.</remarks>
            <value>Whether the identity provider MUST authenticate the presenter 
            directly rather than rely on a previous security context.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest.IsPassive">
            <summary>
            Gets or sets a value indicating whether the identity provider and the user agent itself MUST NOT 
            visibly take control of the user interface from the requester and
            interact with the presenter in a noticeable fashion. 
            </summary>
            <remarks>See [SamlCore, 3.4.1] for more details.</remarks>
            <value>Whether the identity provider and the user agent itself MUST NOT 
            visibly take control of the user interface from the requester and
            interact with the presenter in a noticeable fashion.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest.NameIdentifierPolicy">
            <summary>
            Gets or sets the constraints on the name identifier to be used to 
            represent the requested subject.
            </summary>
            <remarks>See [SamlCore, 3.4.1] for more details.</remarks>
            <value>The constraints on the name identifier to be used to 
            represent the requested subject.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest.ProviderName">
            <summary>
            Gets or sets the constraints on the name identifier to be used to 
            represent the requested subject. 
            </summary>
            <remarks>See [SamlCore, 3.4.1] for more details.</remarks>
            <value>The constraints on the name identifier to be used to 
            represent the requested subject.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest.ProtocolBinding">
            <summary>
            Gets or sets a URI that identifies the SAML protocol binding to be used 
            when returning the Response message. 
            </summary>
            <remarks>See [SamlCore, 3.4.1] for more details.</remarks>
            <details>
            This property may not be set when the AssertionConsumerServiceIndex 
            property is set.
            </details>
            <value>A URI that identifies the SAML protocol binding to be used 
            when returning the Response message.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest.RequestedAuthenticationContext">
            <summary>
            Gets or sets the requirements, if any, that the requester places on the 
            authentication context that applies to the responding provider's
            authentication of the presenter. 
            </summary>
            <remarks>See [SamlCore, 3.4.1] for more details.</remarks>
            <value>The requirements, if any, that the requester places on the 
            authentication context that applies to the responding provider's
            authentication of the presenter.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest.Scoping">
            <summary>
            Gets or sets a set of identity providers trusted by the requester to
            authenticate the presenter, as well as limitations and context 
            related to proxying of the AuthnRequest message to subsequent
            identity providers by the responder.
            </summary>
            <value>The set of identity providers trusted by the requester to
            authenticate the presenter, as well as limitations and context 
            related to proxying of the AuthnRequest message to subsequent
            identity providers by the responder.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest.Subject">
            <summary>
            Gets or sets the requested subject of the resulting assertion(s).
            </summary>
            <remarks>See [SamlCore, 3.4.1] for more details.</remarks>
            <value>The requested subject of the resulting assertion(s).</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.MetadataEndpointConfiguration">
            <summary>
            The <c>MetadataEndpointConfiguration</c> class routes incoming SAML messages to services based on information
            about this service's supported endpoints in a SAML metadata document.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.EndpointConfiguration">
            <summary>
            The <c>EndpointConfiguration</c> class provides configuration information about supported local SAML endpoints.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.EndpointConfiguration.GetBindings(System.Uri)">
            <summary>
            Returns a list of bindings supported on the given Uri.
            </summary>
            <param name="requestUri">The endpoint.</param>
            <returns>The list of bindings supported by the endpoint.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.EndpointConfiguration.GetServices(System.Uri,System.Uri,System.Boolean)">
            <summary>
            Returns a list of SAML service types that serve on the given endpoint using the given binding and message type.
            </summary>
            <param name="requestUri">The endpoint.</param>
            <param name="bindingType">The binding type.</param>
            <param name="isResponse">The message type is response.</param>
            <returns>The list of SAML services supported.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MetadataEndpointConfiguration.AddBindingOnEndpoint(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.Uri}},System.Uri,System.Uri)">
            <summary>
            Adds a supported binding for the given URI.
            </summary>
            <remarks>If no entry exists for the given URI in the dictionary, one will be created. If the entry already exists, 
            the bindings parameter will not be modified.</remarks>
            <param name="bindings">The set of mappings that is being built.  The function may change this dictionary's contents.</param>
            <param name="binding">The new binding URI.</param>
            <param name="endpoint">The endpoint URI.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MetadataEndpointConfiguration.AddServiceTypeForBindingOnEndpoint(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.Uri,System.Collections.Generic.HashSet{Microsoft.IdentityModel.Protocols.Saml2.ServiceType}}},Microsoft.IdentityModel.Protocols.Saml2.ServiceType,System.Uri,System.Uri)">
            <summary>
            Adds a supported service type for the given binding on the given URI.
            </summary>
            <remarks>
            If no entry exists at either level of indirection, an entry will be created.  If the entry already exists, 
            the services parameter will not be modified.
            </remarks>
            <param name="services">The set of mappings that is being built.  The function may change this dictionary's contents.</param>
            <param name="serviceType">The new service type.</param>
            <param name="binding">The new binding URI.</param>
            <param name="endpoint">The endpoint URI.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MetadataEndpointConfiguration.#ctor(Microsoft.IdentityModel.Protocols.WSFederation.Metadata.EntityDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.MetadataEndpointConfiguration"/> class.
            </summary>
            <param name="configuration">The entity descriptor describing this SAML provider.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MetadataEndpointConfiguration.GetBindings(System.Uri)">
            <summary>
            Returns a list of bindings supported on the given Uri.
            </summary>
            <param name="requestUri">The endpoint.</param>
            <returns>The list of bindings supported by the endpoint.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MetadataEndpointConfiguration.GetServices(System.Uri,System.Uri,System.Boolean)">
            <summary>
            Returns a list of SAML service types that serve on the given endpoint using the given binding and message type.
            </summary>
            <param name="requestUri">The endpoint.</param>
            <param name="bindingType">The binding type.</param>
            <param name="isResponse">The message type is response.</param>
            <returns>The list of SAML services supported.</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.MultipleKeySecurityToken">
            <summary>
            The <c>MultipleKeySecurityToken</c> class is a <c>SecurityToken</c> that can resolve multiple security keys.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MultipleKeySecurityToken.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.MultipleKeySecurityToken"/> class.
            </summary>
            <param name="securityTokenCollection">The collection of security tokens.</param>
            <param name="securityKeyIdentifierClause">The security key identifier clause that identifies this token.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MultipleKeySecurityToken.CanCreateKeyIdentifierClause{T}">
            <summary>
            Gets a value that indicates whether this security token is capable of creating the specified key identifier.
            </summary>
            <typeparam name="T">A System.IdentityModel.Tokens.SecurityKeyIdentifierClause that specifies the key identifier to create.</typeparam>
            <returns>true when T is of type System.IdentityModel.Tokens.SecurityKeyIdentifierClause; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MultipleKeySecurityToken.CreateKeyIdentifierClause{T}">
            <summary>
            Creates the specified key identifier clause.
            </summary>
            <typeparam name="T">A System.IdentityModel.Tokens.SecurityKeyIdentifierClause that specifies the key identifier to create.</typeparam>
            <returns>A System.IdentityModel.Tokens.SecurityKeyIdentifierClause that is a key identifier clause for the security token.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MultipleKeySecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>
            Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.
            </summary>
            <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause"/> to compare to this instance.</param>
            <returns>true if keyIdentifierClause matches; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MultipleKeySecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>
            Gets the key for the specified key identifier clause.
            </summary>
            <param name="keyIdentifierClause">A System.IdentityModel.Tokens.SecurityKeyIdentifierClause to get the key for.</param>
            <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey"/> that represents the key.</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.MultipleKeySecurityToken.SecurityKeys">
            <summary>
            Gets the cryptographic keys associated with the security token.
            </summary>
            <value>
            A read only collection that contains the set of keys associated with the security token.
            </value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.MultipleKeySecurityToken.Id">
            <summary>
            Gets a unique identifier of the security token.
            </summary>
            <value>The unique identifier of the security token.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.MultipleKeySecurityToken.ValidFrom">
            <summary>
            Gets the first instant in time at which this security token is valid.
            </summary>
            <value>A <see cref="T:System.DateTime"/> that represents the instant in time at which this security token is first valid.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.MultipleKeySecurityToken.ValidTo">
            <summary>
            Gets the last instant in time at which this security token is valid.
            </summary>
            <value>A <see cref="T:System.DateTime"/> that represents the last instant in time at which this security token is valid.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.SignedOutEventArgs">
            <summary>
            The <c>SignedOutEventArgs</c> class provides information about a recently signed-out user.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SignedOutEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SignedOutEventArgs"/> class.
            </summary>
            <remarks>This constructor should be used to indicate the event is a notification only and no action should be taken.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SignedOutEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SignedOutEventArgs"/> class.
            </summary>
            <param name="state">The state associated with the sign out event.</param>
            <param name="relayState">The relay state associated with the sign out event.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SignedOutEventArgs.RelayState">
            <summary>
            Gets the relay state associated with the sign out event.
            </summary>
            <value>The relay state associated with the sign out event.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SignedOutEventArgs.ShouldRedirect">
            <summary>
            Gets a value indicating whether or not the handler should redirect.
            </summary>
            <value>Whether or not the handler should redirect.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SignedOutEventArgs.State">
            <summary>
            Gets the state associated with the sign out event.
            </summary>
            <value>The state associated with the sign out event.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.NewNameIdentifier">
            <summary>
            The <c>NewNameIdentifier</c> class represents the new SAML name identifier that will be used to identify a subject.
            </summary>
            <remarks>See the saml:NewID or saml:NewEncryptedID elements defined in [SamlCore, 3.6.1; SamlCoreErrata, 3.6.1] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.NewNameIdentifier.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.NewNameIdentifier"/> class.
            </summary>
            <param name="identifier">The new identifier.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.NewNameIdentifier.EncryptingCredentials">
            <summary>
            Gets or sets the credentials to use when encrypting the NewID element in a NewEncryptedID element.
            </summary>
            <value>The credentials to use when encrypting the NewID element.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.NewNameIdentifier.Value">
            <summary>
            Gets or sets the value of NewID/NewEncryptedID element.
            </summary>
            <value>The value of the NewID element.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.NameIdentifierPolicy">
            <summary>
            The <c>NameIdentifierPolicy</c> class tailors the name identifier in the subjects of assertions resulting
            from an AuthnRequest.
            </summary>
            <remarks>See the samlp:NameIDPolicy element defined in [SamlCore, 3.4.1.1].</remarks>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.NameIdentifierPolicy.AllowCreate">
            <summary>
            Gets or sets a value indicating whether the identity provider is allowed, in the course
            of fulfilling the request, to create a new identifier to represent
            the principal.
            </summary>
            <remarks>
            See [SamlCore, 3.4.1.1] for more details.
            </remarks>
            <value>Whether the identity provider is allowed, in the course
            of fulfilling the request, to create a new identifier to represent
            the principal.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.NameIdentifierPolicy.Format">
            <summary>
            Gets or sets the name identifier format.
            </summary>
            <remarks>See [SamlCore, 3.4.1.1] for more details.</remarks>
            <value>The name identifier format.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.NameIdentifierPolicy.SPNameQualifier">
            <summary>
            Gets or sets an optional namespace that the assertion subject's identifier be 
            returned (or created) in.
            </summary>
            <remarks>See [SamlCore, 3.4.1.1] for more details.</remarks>
            <value>An optional namespace that the assertion subject's identifier be 
            returned (or created) in.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.LogoutResponse">
            <summary>
            The <c>LogoutResponse</c> class contains the results of a logout request.
            </summary>
            <remarks>See the samlp:LogoutResponse element defined in [SamlCore, 3.7.2] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.LogoutResponse.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Status)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.LogoutResponse"/> class.
            </summary>
            <param name="status">The SAML status code associated with this response.</param>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException">
            <summary>
            The <c>BindingSerializationException</c> class indicates an error has occurred while serializing or deserializing
            a SAML binding message.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException"/> class.
            </summary>
            <param name="binding">The binding that caused the error.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException"/> class.
            </summary>
            <param name="protocolBinding">The binding that caused the error.</param>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException.#ctor(System.Uri,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException"/> class.
            </summary>
            <param name="protocolBinding">The binding that caused the error.</param>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException"/> class.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>        
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the System.Runtime.Serialization.SerializationInfo with information about the exception.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializationException.ProtocolBinding">
            <summary>
            Gets the binding used during message serialization and deserialization.
            </summary>
            <value>The binding used during message serialization and deserialization.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.Types">
            <summary>
            The <c>Types</c> class contains string constants for XSI types defined in [SAMLCore].
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.HttpHeaders">
            <summary>
            The <c>HttpHeaders</c> class contains HTTP headers used by HTTP bindings.
            </summary>
            <remarks>See [SAMLBind, 3.4.5.1, 3.5.5.1, 3.6.5.1] for details.</remarks>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Constants.HttpHeaders.Caching">
            <summary>
            Gets the list of HTTP headers required to prevent caching.
            </summary>
            <value>The list of HTTP headers required to prevent caching.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.SubjectQuery">
            <summary>
            The <c>SubjectQuery</c> class contains information common to all requests for additional information about a given SAML subject.
            </summary>
            <remarks>See the samlp:SubjectQueryAbstractType type defined in [SamlCore, 3.3.2.1] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SubjectQuery.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2Subject)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SubjectQuery"/> class.
            </summary>
            <param name="subject">The subject of the query.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SubjectQuery.Subject">
            <summary>
            Gets or sets the SAML subject being queried.
            </summary>
            <remarks>See [SamlCore, 3.3.2.1] for more details.</remarks>
            <value>The SAML subject being queried.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionClient">
            <summary>
            The <c>ArtifactResolutionClient</c> class provides methods to resolve SAML artifacts into their
            original messages.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionClient.FindResolutionEndpoint(Microsoft.IdentityModel.Protocols.WSFederation.Metadata.EntityDescriptor,Microsoft.IdentityModel.Protocols.Saml2.Artifact)">
            <summary>
            Finds the artifact resolution endpoint for an entity.
            </summary>
            <param name="entityDescriptor">The entity descriptor.</param>
            <param name="artifact">The artifact to resolve.</param>
            <returns>The SAML artifact resolution endpoint.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionClient.#ctor(Microsoft.IdentityModel.Protocols.Saml2.EntityConfiguration,Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer,Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionClient"/> class.
            </summary>
            <param name="entityConfiguration">The remote SAML entities this client can resolve artifact from.</param>
            <param name="soapBindingSerializer">The SOAP SAML binding serializer to be used during artifact resolution.</param>
            <param name="messageDecorator">The SAML message decorator to use for outgoing ArtifactResolve messages.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionClient.Resolve(Microsoft.IdentityModel.Protocols.Saml2.Artifact)">
            <summary>
            Performs artifact resolution.
            </summary>
            <param name="artifact">The artifact to be resolved.</param>
            <returns>The SAML message obtained from the artifact resolution response.</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionClient.EntityConfiguration">
            <summary>
            Gets the remote SAML entities this client can resolve artifact from.
            </summary>
            <value>The remote SAML entities this client can resolve artifact from.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionClient.MessageDecorator">
            <summary>
            Gets the SAML message decorator used by this artifact resolution client.
            </summary>
            <value>The SAML message decorator used by this artifact resolution client.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionClient.SoapBindingSerializer">
            <summary>
            Gets the SAML SOAP binding serializer used by this artifact resolution client.
            </summary>
            <value>The SAML SOAP binding serializer used by this artifact resolution client.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.AssertionIdRequest">
            <summary>
            The <c>AssertionIdRequest</c> class requests the assertions with a given set of identifiers.
            </summary>
            <remarks>See the samlp:AssertionIDRequest element defined in [SamlCore, 3.3.1] for more details.</remarks>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AssertionIdRequest.References">
            <summary>
            Gets a collection of assertion IDs to be requested.
            </summary>
            <value>The AssertionIDs of this request.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.HttpMessage">
            <summary>
            The <c>HttpMessage</c> class represents a SAML message to be sent or that has been received over an HTTP binding.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpMessage.#ctor(System.Uri,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpMessage"/> class.
            </summary>
            <param name="protocolBinding">A URI identifying a SAML binding.</param>
            <param name="endpoint">A URI identifying the address which this message will be sent to, or which it was received on.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.HttpMessage.ProtocolBinding">
            <summary>
            Gets the binding that the message was received on or will be sent on.
            </summary>
            <value>The binding that the message was received on or will be sent on.</value>
            <details>
            See <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.ProtocolBindings"/> for a list of bindings predefined in [SamlBind].
            </details>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.HttpMessage.Endpoint">
            <summary>
            Gets the endpoint that message was received on or will be sent on.
            </summary>
            <value>The endpoint that message was received on or will be sent on.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.HttpMessage.Properties">
            <summary>
            Gets the list of internal message properties. These properties will not be serialized with message.
            </summary>
            <value>The list of internal message properties.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.HttpMessage.SerializedProperties">
            <summary>
            Gets the list of serialized message properties, i.e. properties obtained from request or properties 
            that will be sent to the response.
            </summary>
            <value>The list of serialized message properties.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.HttpBindingParameters">
            <summary>
            The <c>HttpBindingParameters</c> class contains constants for the binding parameters as specified in HTTP Redirect Binding [SamlBind, 3.4],
            HTTP POST Binding [SamlBind, 3.5] and HTTP Artifact Binding [SamlBind, 3.6].
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.HttpBindingParameters.RelayState">
            <summary>
            The RelayState parameter, a mechanism for preserving and conveying state information. See [SamlBind, 3.1.1]
            for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.HttpBindingParameters.SAMLArt">
            <summary>
            The artifact parameter. See [SamlBind, 3.6] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.HttpBindingParameters.SAMLEncoding">
            <summary>
            The encoding parameter for HTTP Redirect binding. See [SamlBind, 3.4.4] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.HttpBindingParameters.SAMLRequest">
            <summary>
            The request parameter in HTTP Redirect and POST bindings. See [SamlBind, 3.4, 3.5] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.HttpBindingParameters.SAMLResponse">
            <summary>
            The response parameter in HTTP Redirect and POST bindings. See [SamlBind, 3.4, 3.5] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.HttpBindingParameters.Signature">
            <summary>
            The signature parameter for HTTP Redirect binding. See [SamlBind, 3.4.4.1] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.HttpBindingParameters.SigAlg">
            <summary>
            The message signature algorithm for HTTP Redirect binding. See [SamlBind, 3.4.4.1] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.HttpBindingParameters.SamlParameters">
            <summary>
            List of all possible SAML binding parameters.
            </summary>
        </member>

        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.MessageValidationException">
            <summary>
            The <c>MessageValidationException</c> class indicates an error related to SAML message validation.
            </summary>        
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.MessageValidationException"/> class.
            </summary>        
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.MessageValidationException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>        
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.MessageValidationException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception. </param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>        
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.MessageValidationException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">An object that describes the source or destination of the serialized data.</param>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.HttpPostBindingSerializer">
            <summary>
            The <c>HttpPostBindingSerializer</c> serializes and deserializes SAML protocol messages
            for the HTTP POST Binding.
            </summary> 
            <remarks>See [SamlBind, 3.5] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpPostBindingSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpPostBindingSerializer"/> class.
            </summary>
            <remarks>This serializer will not be able to verify signatures on incoming messages or decrypt encrypted content.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpPostBindingSerializer.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpPostBindingSerializer"/> class.
            </summary>
            <param name="saml2ProtocolSerializer">The SAML protocol serializer to be used during serialization.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpPostBindingSerializer.TryReadHttpMessage(System.Web.HttpRequestBase,Microsoft.IdentityModel.Protocols.Saml2.HttpMessage@)">
            <summary>
            Tries to read a SAML message from an HttpRequest object.
            </summary>
            <param name="request">The HttpRequest to read from.</param>
            <param name="httpMessage">A variable that will receive the SAML message obtained from the request.</param>
            <returns>true, if read was successful; otherwise, false.</returns>
            <details>
            This method does not throw if request is not recognized as a SAML message.
            </details>        
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.HttpPostBindingSerializer.WriteHttpMessage(System.Web.HttpResponseBase,Microsoft.IdentityModel.Protocols.Saml2.HttpMessage)">
            <summary>
            Writes a SAML message to an HttpResponse object.
            </summary>
            <param name="response">The HttpResponse to write to.</param>
            <param name="httpMessage">The SAML message to write.</param>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.StatusCode">
            <summary>
            The <c>StatusCode</c> class specifies a code or a set of nested codes representing the status of 
            the corresponding request.
            </summary>
            <remarks>See the samlp:StatusCode element defined in [SamlCore, 3.2.2.2] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.StatusCode.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.StatusCode"/> class.
            </summary>
            <param name="value">The top-level status code value.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.StatusCode.#ctor(System.Uri,Microsoft.IdentityModel.Protocols.Saml2.StatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.StatusCode"/> class.
            </summary>
            <param name="value">The top-level status code value.</param>
            <param name="subStatus">The secondary status.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.StatusCode.SubStatus">
            <summary>
            Gets or sets the optional subordinate status code that provides more specific information
            on an error condition.
            </summary>
            <remarks>See [SamlCore, 3.2.2.2] for more details.</remarks>
            <value>The optional subordinate status code that provides more specific information
            on an error condition.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.StatusCode.Value">
            <summary>
            Gets the status code value.
            </summary>
            <remarks>See [SamlCore, 3.2.2.2] for more details.</remarks>
            <value>The status code value.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.SignedInEventArgs">
            <summary>
            The <c>SignedInEventArgs</c> class provides information about a recently signed-in user.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SignedInEventArgs.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityToken,Microsoft.IdentityModel.Claims.IClaimsPrincipal,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SignedInEventArgs"/> class.
            </summary>
            <param name="securityToken">The security token used to sign in principal.</param>
            <param name="claimsPrincipal">The signed-in claims principal.</param>
            <param name="notBefore">The sign-in session's start time.</param>
            <param name="notOnOrAfter">The sign-in session's end time.</param>
            <param name="state">Application-specific state associated with this request.</param>
            <param name="relayState">Protocol-specific state associated with this request.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SignedInEventArgs.ClaimsPrincipal">
            <summary>
            Gets the signed-in ClaimsPrincipal.
            </summary>
            <value>
            The signed-in ClaimsPrincipal.
            </value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SignedInEventArgs.NotBefore">
            <summary>
            Gets signed-in session start time.
            </summary>
            <value>
            The signed-in session start time.
            </value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SignedInEventArgs.NotOnOrAfter">
            <summary>
            Gets the signed-in session end time.
            </summary>
            <value>
            The signed-in session end time.
            </value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SignedInEventArgs.RelayState">
            <summary>
            Gets the protocol-specific state.
            </summary>
            <value>
            Protocol-specific state.
            </value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SignedInEventArgs.SecurityToken">
            <summary>
            Gets the security token used to sign-in.
            </summary>
            <value>
            The signed-in security token.
            </value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SignedInEventArgs.State">
            <summary>
            Gets the application-specific state.
            </summary>
            <value>
            Application-specific state.
            </value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Scoping">
            <summary>
            The <c>Scoping</c> class specifies the identity providers trusted by the requester to authenticate the presenter.
            </summary>
            <remarks>See the samlp:Scoping element defined in [SamlCore, 3.4.1.2] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Scoping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Scoping"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Scoping.#ctor(Microsoft.IdentityModel.Protocols.Saml2.IdentityProviderCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Scoping"/> class.
            </summary>
            <remarks>
            Use this constructor if you want to use a type derived from 
            IdentityProviderCollection for the IdentityProviderList.
            </remarks>
            <param name="identityProviderList">The list of identity providers.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Scoping.IdentityProviderList">
            <summary>
            Gets the list of identity providers and associated information 
            that the requester deems acceptable to respond to the request.
            </summary>
            <remarks>See [SamlCore, 3.4.1.2] for more details.</remarks>
            <value>The list of identity providers that the requester deems acceptable to respond to the request.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Scoping.ProxyCount">
            <summary>
            Gets or sets the number of proxying indirections permissible between 
            the identity provider that receives this AuthenticationRequest
            and the identity provider that ultimately authenticates the principal.
            </summary>
            <remarks>See [SamlCore, 3.4.1.2] for more details.</remarks>
            <details>
            A value of 0 permits no proxying, but null expresses no restriction.
            </details>
            <value>The number of proxying indirections permissible between the identity provider that receives
            this request and the identity provider that ultimately authenticates the principal.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Scoping.RequesterIds">
            <summary>
            Gets the set of requesting entities on whose behalf the requester is 
            acting.
            </summary>
            <remarks>See [SamlCore, 3.4.1.2] for more details.</remarks>
            <value>The set of requesting entities on whose behalf the requester is acting.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.IdentityProviderEntry">
            <summary>
            The <c>IdentityProviderEntry</c> class specifies a single identity provider trusted by the requester to
            authenticate the presenter. 
            </summary>
            <remarks>See the samlp:IDPEntry element defined in [SamlCore, 3.4.1.3.1] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.IdentityProviderEntry.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.IdentityProviderEntry"/> class.
            </summary>
            <param name="providerId">The unique identifier for the Identity Provider.</param>
            <exception cref="T:System.ArgumentNullException">When providerId is null.</exception>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.IdentityProviderEntry.Location">
            <summary>
            Gets or sets the location of a profile-specific endpoint supporting the 
            authentication request protocol. See [SamlCore, 3.4.1.3.1] for more details.
            </summary>
            <value>The location of a profile-specific endpoint supporting the 
            authentication request protocol.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.IdentityProviderEntry.Name">
            <summary>
            Gets or sets a human-readable name for the identity provider. See [SamlCore, 3.4.1.3.1] for more details.
            </summary>
            <value>A human-readable name for the identity provider.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.IdentityProviderEntry.ProviderId">
            <summary>
            Gets or sets the unique identifier of the identity provider. See [SamlCore, 3.4.1.3.1] for more details.
            </summary>
            <details>
            This property may not be null.
            </details>
            <value>The unique identifier of the identity provider.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationContextComparisonType">
            <summary>
            Specifies comparison rules for determining an authentication context's suitability.
            </summary>
            <remarks>See [SamlCore, 3.3.2.2.1] for more details.</remarks>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationContextComparisonType.Exact">
            <summary>
            The resulting authentication context in the authentication 
            statement MUST be the exact match of at least one of the 
            authentication contexts specified.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationContextComparisonType.Minimum">
            <summary>
            The resulting authentication context in the authentication
            statement MUST be at least as strong (as deemed by the responder)
            as one of the authentication contexts specified.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationContextComparisonType.Maximum">
            <summary>
            The resulting authentication context in the authentication
            statement MUST be as strong as possible (as deemed by the responder)
            without exceeding the strength of at least one of the authentication
            contexts specified.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationContextComparisonType.Better">
            <summary>
            The resulting authentication context in the authentication
            statement MUST be stronger (as deemed by the responder) than any 
            one of the authentication contexts specified.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Response">
            <summary>
            The <c>Response</c> class contains the result of an <c>AuthenticationRequest</c>.
            </summary>
            <remarks>See the samlp:Response element defined in [SamlCore, 3.3.3] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Response.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Status)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Response"/> class.
            </summary>
            <param name="status">The SAML status code associated with this response.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Response.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Status,System.Collections.Generic.IEnumerable{Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Response"/> class.
            </summary>
            <param name="status">The SAML status code associated with this response.</param>
            <param name="assertions">A list of assertions contained in this response.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Response.Assertions">
            <summary>
            Gets the set of assertions that satisfy the request. See [SamlCore, 3.3.3] for
            more details.
            </summary>
            <value>The set of assertions that satisfy the request.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.RequestTrackingData">
            <summary>
            The <c>RequestTrackingData</c> class associates state from a SAML request with the state in the corresponding response.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.RequestTrackingData.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.RequestTrackingData"/> class.
            </summary>
            <param name="state">The state parameter.</param>
            <param name="relayState">The relay state parameter.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.RequestTrackingData.RelayState">
            <summary>
            Gets the RelayState parameter.
            </summary>
            <remarks>See [SamlBind 3.1.1] for more details.</remarks>
            <value>The RelayState parameter.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.RequestTrackingData.State">
            <summary>
            Gets the State parameter.
            </summary>
            <remarks>State may be set for request only and is returned with corresponding response.</remarks>
            <details>
            See <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer"/> for usage of State in HTTP SAML bindings.
            </details>
            <value>The State parameter.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializerCollection">
            <summary>
            The <c>BindingSerializerCollection</c> class maps from SAML protocol binding identifiers to SAML protocol 
            binding serializers.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializerCollection.GetSerializer(System.Uri)">
            <summary>
            Gets serializer for specified binding.
            </summary>
            <param name="bindingType">The binding for which a serializer is required.</param>
            <returns>A binding serializer for the requested binding.</returns>
            <exception cref="T:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedBindingException">When the requested binding is unknown.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializerCollection.SetSerializer(System.Uri,Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer)">
            <summary>
            Sets serializer for specified binding.
            </summary>
            <param name="bindingType">A URI identifying a binding.</param>
            <param name="httpBindingSerializer">A serializer that can serialize the specified binding.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializerCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A IEnumerator(Of T) that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.BindingSerializerCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionException">
            <summary>
            The <c>ArtifactResolutionException</c> class indicates an error has occurred while resolving
            a SAML artifact.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception. </param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolutionException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">An object that describes the source or destination of the serialized data.</param>
        </member>
        <member name="T:Microsoft.IdentityModel.BoundedCache{T}">
            <summary>
            A cache of type T where items are cached and removed 
            according to the type specified, currently only 'TimeBounded' is supported.  An items is added with an expiration time.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.BoundedCache{T}.#ctor(System.Int32,System.TimeSpan)">
            <summary>
            Creates a cache for items of Type 'T' where expired items will purged on a regular interval
            </summary>
            <param name="capacity">The maximum size of the cache in number of items.
            If int.MaxValue is passed then the size is not bound.</param>
            <param name="purgeInterval">The time interval for checking expired items.</param>
            
        </member>
        <member name="M:Microsoft.IdentityModel.BoundedCache{T}.#ctor(System.Int32,System.TimeSpan,System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Creates a cache for items of Type 'T' where expired items will purged on a regular interval
            </summary>
            <param name="capacity">The maximum size of the cache in number of items.
            If int.MaxValue is passed then the size is not bound.</param>
            <param name="purgeInterval">The time interval for checking expired items.</param>
            <param name="keyComparer">EqualityComparer for comparing keys.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The input parameter 'capacity' is less than or equal to zero.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The input parameter 'purgeInterval' is less than or equal to TimeSpan.Zero.</exception>
            <exception cref="T:System.ArgumentNullException">The input parameter 'keyComparer' is null.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.BoundedCache{T}.Clear">
            <summary>
            Removes all items from the Cache.
            </summary>      
        </member>
        <member name="M:Microsoft.IdentityModel.BoundedCache{T}.EnforceQuota">
            <summary>
            Ensures that the maximum size is not exceeded
            </summary>
            <exception cref="T:System.ServiceModel.QuotaExceededException">If the Capacity of the cache has been reached.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.BoundedCache{T}.IncreaseCapacity(System.Int32)">
            <summary>
            Increases the maximum number of items that the cache will hold. 
            </summary>
            <param name="size">The capacity to increase.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The input parameter 'size' is less than or equal to zero.</exception>
            <returns>Updated capacity</returns>
            <remarks>If size + current capacity &gt;= int.MaxValue then capacity will be set to int.MaxValue and the cache will be unbounded</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.BoundedCache{T}.Purge">
            <summary>
            This method must not be called from within a read or writer lock as a deadlock will occur.
            Checks the time a decides if a cleanup needs to occur.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.BoundedCache{T}.TryAdd(System.String,{T},System.DateTime)">
            <summary>
            Attempt to add a item to the cache.
            </summary>
            <param name="key">Key to use when adding item</param>
            <param name="item">Item of type 'T' to add to cache</param>
            <param name="expirationTime">The expiration time of the entry.</param>
            <returns>true if item was added, false if item was not added</returns>
            <exception cref="T:System.ServiceModel.QuotaExceededException">Thrown if an attempt is made to add an item when the current 
            cache size is equal to the capacity</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.BoundedCache{T}.TryFind(System.String)">
            <summary>
            Attempts to find an item in the cache.
            </summary>
            <param name="key">Item to search for.</param>
            <returns>true if item is in cache, false otherwise.</returns>
            <remarks>Item may be expired and would be purged next cycle.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.BoundedCache{T}.TryGet(System.String,{T}@)">
            <summary>
            Attempts to get an item from the Cache.
            </summary>
            <param name="key">Item to search for.</param>
            <param name="item">The object reference that will be set to the retrieved item.</param>
            <returns>true if item is found, false otherwise.</returns>
            <remarks>Item may be expired and would be purged next cycle.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.BoundedCache{T}.TryRemove(System.String)">
            <summary>
            Attempts to remove an item from the Cache.
            </summary>
            <param name="key">Item to remove.</param>
            <returns>true if item was removed, false otherwise.</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.BoundedCache{T}.CacheLock">
            <summary>
            Gets the ReaderWriterLock for controlling simultaneous reads and writes
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.BoundedCache{T}.Capacity">
            <summary>
            Gets or Sets the current Capacity of the cache in number of items.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.BoundedCache{T}.Items">
            <summary>
            Gets the Dictionary that contains the cached items.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.BoundedCache{T}.PurgeInterval">
            <summary>
            Gets or Sets the time interval that will be used for checking expired items.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">If 'value' is less than or equal to TimeSpan.Zero.</exception>
        </member>
        <member name="T:Microsoft.IdentityModel.BoundedCache{T}.ExpirableItem{T}">
            <summary>
            Wrapper class for objects contained in BoundedCache.  Contains the obj 'T' and 
            </summary>
            <typeparam name="ET">Type of the item.</typeparam>
        </member>
        <member name="M:Microsoft.IdentityModel.BoundedCache{T}.ExpirableItem{T}.#ctor({T},System.DateTime)">
            <summary>
            Initializes a new instance of the ExpirableItem class.
            </summary>
            <param name="item">The original item.</param>
            <param name="expirationTime">The expiration time.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.BoundedCache{T}.ExpirableItem{T}.IsExpired">
            <summary>
            Determines whether this item is expired.
            </summary>
            <returns>true if expired; otherwise false.</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.BoundedCache{T}.ExpirableItem{T}.Item">
            <summary>
            Gets this item value.
            </summary>
            <value>Item value.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedServiceException">
            <summary>
            The <c>UnsupportedServiceException</c> class indicates that a SAML service type is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedServiceException.#ctor(Microsoft.IdentityModel.Protocols.Saml2.ServiceType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedServiceException"/> class.
            </summary>
            <param name="saml2ServiceType">The type of service that is unsupported.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedServiceException.#ctor(Microsoft.IdentityModel.Protocols.Saml2.ServiceType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedServiceException"/> class.
            </summary>
            <param name="saml2ServiceType">The type of service that is unsupported.</param>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedServiceException.#ctor(Microsoft.IdentityModel.Protocols.Saml2.ServiceType,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedServiceException"/> class.
            </summary>
            <param name="saml2ServiceType">The type of service that is unsupported.</param>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedServiceException"/> class.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>        
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the System.Runtime.Serialization.SerializationInfo with information about the exception.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedServiceException.ServiceType">
            <summary>
            Gets the SAML service type.
            </summary>
            <value>The SAML service type.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.ServiceCollection">
            <summary>
            The <c>ServiceCollection</c> class maps from SAML service types to service implementations.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ServiceCollection.GetService(Microsoft.IdentityModel.Protocols.Saml2.ServiceType)">
            <summary>
            Gets the implementation of a service for a specified service type.
            </summary>
            <param name="saml2ServiceType">The type of service for which an implementation is required.</param>
            <returns>An implementation of the requested service.</returns>
            <exception cref="T:Microsoft.IdentityModel.Protocols.Saml2.UnsupportedServiceException">When the desired service type is unknown.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ServiceCollection.SetService(Microsoft.IdentityModel.Protocols.Saml2.ServiceType,Microsoft.IdentityModel.Protocols.Saml2.Saml2Service)">
            <summary>
            Sets the implementation for a specified service type.
            </summary>
            <param name="saml2ServiceType">The service type for which an implementation is being set.</param>
            <param name="saml2Service">The implementation of the service.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ServiceCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A IEnumerator(Of T) that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ServiceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.NameIdMappingRequest">
            <summary>
            The <c>NameIdMappingRequest</c> class requests a partner modify the mapping of a subject's SAML name identifier.
            </summary>
            <remarks>See the samlp:NameIDMappingRequest element defined in [SamlCore, 3.8.1].</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.NameIdMappingRequest.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2NameIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.NameIdMappingRequest"/> class.
            </summary>
            <param name="identifier">The name identifier to be mapped.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.NameIdMappingRequest.Identifier">
            <summary>
            Gets or sets the identifier and associated descriptive data that specify the principal as currently recognized by the
            requester and the responder.
            </summary>
            <value>The identifier and associated descriptive data that specify the principal as currently recognized by the
            requester and the responder.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.NameIdMappingRequest.NameIdentifierPolicy">
            <summary>
            Gets or sets requirements regarding the format and optional name qualifier for the identifier to be returned.
            </summary>
            <value>The requirements regarding the format and optional name qualifier for the identifier to be returned.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes">
            <summary>
            The <c>StatusCodes</c> class contains constants for SAML status codes as defined in [SamlCore, 3.2.2.2]. 
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.AuthenticationFailed">
            <summary>
            The responding provider was unable to successfully authenticate the 
            principal. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.InvalidAttrNameOrValue">
            <summary>
            Unexpected or invalid content was encountered within a saml:Attribute
            or saml:AttributeValue element. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.InvalidNameIdPolicy">
            <summary>
            The responding provider cannot or will not support the requested name 
            identifier policy. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.NoAuthenticationContext">
            <summary>
            The specified authentication context requirements cannot be met by
            the provider. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.NoAvailableIdp">
            <summary>
            Used by an intermediary to indicate that none of the supported 
            identity providers Loc elements in an IDPList can be resolved 
            or that none of the supported identity providers are available. 
            See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.NoPassive">
            <summary>
            Indicates the responding provider cannot authenticate the principal
            passively, as has been requested. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.NoSupportedIdp">
            <summary>
            Used by an intermediary to indicate that none of the identity 
            providers in an IDPList are supported by the intermediary. 
            See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.PartialLogout">
            <summary>
            Used by a session authority to indicate to a session participant 
            that it was not able to propagate logout to all other session 
            participants. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.ProxyCountExceeded">
            <summary>
            Indicates that a responding provider cannot authenticate the 
            principal directly and is not permitted to proxy the request
            further. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.RequestDenied">
            <summary>
            The SAML responder or SAML authority is able to process the 
            request but has chosen not to respond. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.Requester">
            <summary>
            The request could not be performed due to an error on the part of
            the requester. Permissible at the top level. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.RequestUnsupported">
            <summary>
            The SAML responder or SAML authority does not support the request.
            See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.RequestVersionDeprecated">
            <summary>
            The SAML responder cannot process any requests with the protocol
            version specified in the request. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.RequestVersionTooHigh">
            <summary>
            The SAML responder cannot process the request because the protocol
            version specified in the message is a major upgrade from the 
            highest protocol version supported by the responder. 
            See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.RequestVersionTooLow">
            <summary>
            The SAML responder cannot process the request because the protocol
            version specified in the request message is too low. 
            See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.ResourceNotRecognized">
            <summary>
            The resource value provided in the request message is invalid or 
            unrecognized. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.Responder">
            <summary>
            The request could not be performed due to an error on the part of 
            the SAML responder or SAML authority. Permissible at the top level. 
            See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.Success">
            <summary>
            The request succeeded. Permissible at the top-level. 
            See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.TooManyResponses">
            <summary>
            The response message would contain more elements than the SAML 
            responder is able to return. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.UnknownAttrProfile">
            <summary>
            An entity that has no knowledge of a particular attribute profile
            has been presented with an attribute drawn from that profile.
            See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.UnknownPrincipal">
            <summary>
            The responding provider does not recognize the principal specified
            or implied by the request. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.UnsupportedBinding">
            <summary>
            The SAML responder cannot properly fulfill the request using the 
            protocol binding specified in the request. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.VersionMismatch">
            <summary>
            The SAML responder could not process the request because the version
            of the request message was incorrect. Permissible at the top level. 
            See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.StatusCodes.TopLevelCodes">
            <summary>
            The codes in this collection are valid as top-level status codes
            in SAML response messages. See [SamlCore, 3.2.2.2] for more details.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationContextReferenceType">
            <summary>
            Specifies the type of authentication context reference represented by a URI.
            </summary>
            <remarks>See saml:AuthnContextClassRef in [SamlCore, 2.7.2.2] for more details.</remarks>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationContextReferenceType.Class">
            <summary>
            The URI refers to a class.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationContextReferenceType.Declaration">
            <summary>
            The URI refers to a declaration.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Web.Configuration.MetadataElementCollection">
            <summary>
            The <c>MetadataElementCollection</c> class provides support for specifying a list of files containing SAML metadata in configuration.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Configuration.MetadataElementCollection.CreateNewElement">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.IdentityModel.Web.Configuration.MetadataElement"/>.
            </summary>
            <returns>The new instance of <see cref="T:Microsoft.IdentityModel.Web.Configuration.MetadataElement"/>.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Configuration.MetadataElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for the specified configuration element.
            </summary>
            <param name="element">The specified configuration element.</param>
            <returns>The element key for the specified configuration element.</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.ProtocolBindings">
            <summary>
            The <c>ProtocolBindings</c> class contains SAML protocol binding URIs as specified in [SamlBind].
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.ProtocolBindings.HttpArtifact">
            <summary>
            Identifies the HTTP Artifact binding specified in [SamlBind, 3.6].
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.ProtocolBindings.HttpPost">
            <summary>
            Identifies the HTTP POST binding specified in [SamlBind, 3.5].
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.ProtocolBindings.HttpRedirect">
            <summary>
            Identifies the HTTP Redirect binding specified in [SamlBind, 3.4].
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.ProtocolBindings.Soap">
            <summary>
            Identifies the SOAP binding specified in [SamlBind, 3.2].
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.ProtocolBindings.ReverseSoap">
            <summary>
            Identifies the Reverse SOAP (PAOS) binding specified in [SamlBind, 3.3].
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.ProtocolBindings.Uri">
            <summary>
            Identifies the URI binding specified in [SamlBind, 3.7].
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Constants.ProtocolBindings.IsWebBinding(System.Uri)">
            <summary>
            Checks whether protocol binding is Web browser binding.
            </summary>
            <param name="protocolBinding">Protocol binding to check.</param>
            <returns>true if given binding is Web browser binding; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.Attributes">
            <summary>
            The <c>Attributes</c> class contains string constants for SAML protocol attributes.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.TokenSerializerAdapter">
            <summary>
            The <c>TokenSerializerAdapter</c> class is used by <c>Saml2ProtocolSerializer</c> to delegate serialization and deserialization calls for elements 
            that <c>Saml2SecurityTokenHandler</c> can read and write.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}">
            <summary>
            The <c>SoapClient</c> class provides common methods for sending SAML protocol messages via SOAP.
            </summary>
            <typeparam name="TRequest">The type of SAML request.</typeparam>
            <typeparam name="TResponse">The type of SAML response.</typeparam>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}.CreateDefaultHttpBinding(System.Uri,System.Boolean)">
            <summary>
            Creates a default binding for a given remote address.
            </summary>
            <param name="remoteAddress">The remote address.</param>
            <param name="useClientCertificate">Whether or not the binding will be used with client certificate credentials.</param>
            <returns>The HTTP binding for a given address.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the SoapClient class.
            </summary>
            <param name="remoteAddress">The remote address to connect to.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}.#ctor(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Initializes a new instance of the SoapClient class.
            </summary>
            <param name="remoteAddress">The remote address to connect to.</param>
            <param name="certificate">The certificate used to authenticate the user for HTTPS session.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}.#ctor(System.Uri,Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer)">
            <summary>
            Initializes a new instance of the SoapClient class.
            </summary>
            <param name="remoteAddress">The remote address to connect to.</param>
            <param name="soapBindingSerializer">The SOAP SAML binding serializer to be used during serialization.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}.#ctor(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer)">
            <summary>
            Initializes a new instance of the SoapClient class.
            </summary>
            <param name="remoteAddress">The remote address to connect to.</param>
            <param name="certificate">The certificate used to authenticate the user for HTTPS session.</param>
            <param name="soapBindingSerializer">The SOAP SAML binding serializer to be used during serialization.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}.#ctor(System.Uri,System.ServiceModel.Channels.Binding,System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer)">
            <summary>
            Initializes a new instance of the SoapClient class.
            </summary>
            <param name="remoteAddress">The remote endpoint to connect to.</param>
            <param name="binding">The SOAP binding to use for connection.</param>
            <param name="certificate">The certificate used to authenticate user for HTTPS session.</param>
            <param name="soapBindingSerializer">The SOAP SAML binding serializer to be used during serialization.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}.Send({T})">
            <summary>
            Sends SAML request to the server and returns server response back.
            </summary>
            <param name="request">The SAML request.</param>
            <returns>The SAML response.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.
            </summary>
            <param name="explicitDispose">True if this is an explicit call to Dispose().</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}.SoapBindingSerializer">
            <summary>
            Gets the SAML SOAP binding serializer used during serialization.
            </summary>
            <value>The SAML SOAP serializer this client uses.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}.SoapClientBase">
            <summary>
            The <c>SoapClientBase</c> class implements the abstract ClientBase class.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}.SoapClientBase.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the SoapClientBase class.
            </summary>
            <param name="binding">The SOAP binding to use for connection.</param>
            <param name="remoteEndpoint">The remote endpoint to connect.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapClient{TRequest, TResponse}.SoapClientBase.ProcessRequest(System.ServiceModel.Channels.Message)">
            <summary>
            Processes incoming SOAP message and generates outgoing SOAP message.
            </summary>
            <param name="request">The request as a SOAP message.</param>
            <returns>The response as a SOAP message.</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.MessageContainer">
            <summary>
            The <c>MessageContainer</c> class represents an incoming SAML protocol message with its context
            and binding information.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageContainer.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.MessageContainer"/> class.
            </summary>
            <param name="samlMessage">The SAML message that will be sent or that was received.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageContainer.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Saml2Message,Microsoft.IdentityModel.Protocols.WSFederation.Metadata.ProtocolEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.MessageContainer"/> class.
            </summary>
            <param name="samlMessage">The SAML message that will be sent or that was received.</param>
            <param name="endpoint">The endpoint and binding to which the message will be sent or on which the message was received.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.MessageContainer.Endpoint">
            <summary>
            Gets the endpoint that the message came from or will be sent to.
            </summary>
            <value>The endpoint that the message came from or will be sent to.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.MessageContainer.Message">
            <summary>
            Gets the SAML protocol message.
            </summary>
            <value>The SAML protocol message.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.MessageContainer.Parameters">
            <summary>
            Gets the collection of extra parameters that may accompany the message.
            </summary>
            <details>
            The binding serializer is responsible to obtain and send parameters from and to the wire.
            </details>
            <value>The collection of extra parameters that may accompany the message.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.MessageContainer.RelayState">
            <summary>
            Gets or sets the RelayState parameter.
            </summary>
            <remarks>See [SamlBind 3.1.1] for more details.</remarks>
            <details>
            See <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer"/> for usage of RelayState in different SAML bindings.
            </details>
            <value>The RelayState parameter.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.MessageContainer.State">
            <summary>
            Gets or sets the State parameter associated with message.
            </summary>
            <remarks>State may be set for request only and is returned with corresponding response.</remarks>
            <details>
            See <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.HttpBindingSerializer"/> for usage of State in HTTP SAML bindings.
            </details>
            <value>The State parameter.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.LogoutRequest">
            <summary>
            The <c>LogoutRequest</c> class requests that a subject's session at a provider be terminated.
            </summary>
            <remarks>See the samlp:LogoutRequest element defined in [SamlCore, 3.7.1] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.LogoutRequest.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2NameIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.LogoutRequest"/> class.
            </summary>
            <param name="nameId">The principal to be logged out.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.LogoutRequest.NameId">
            <summary>
            Gets or sets the identifier and associated attributes that specify the principal as
            currently recognized by the identity and service providers prior to this request.
            </summary>
            <value>The identifier and associated attributes that specify the principal.</value>
            <remarks>See [SamlCore, 3.7.1] for more details.</remarks>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.LogoutRequest.NotOnOrAfter">
            <summary>
            Gets or sets the time at which the request expires, after which the recipient may discard the message.
            </summary>
            <value>The time at which the request expires.</value>
            <remarks>See [SamlCore, 3.7.1] for more details.</remarks>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.LogoutRequest.Reason">
            <summary>
            Gets or sets the reason for the logout, in the form of a URI.
            </summary>
            <remarks>See [SamlCore, 3.7.1] for more details.</remarks>
            <value>The reason for the logout.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.LogoutRequest.SessionIndexes">
            <summary>
            Gets the identifiers that indexes this session at the message recipient.
            </summary>
            <remarks>See [SamlCore, 3.7.1] for more details.</remarks>
            <value>The identifiers that indexes this session at the message recipient.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationQuery">
            <summary>
            The <c>AuthenticationQuery</c> class requests the set of assertions that a provider has issued.
            </summary>
            <remarks>See the samlp:AuthnQuery element defined in [SamlCore, 3.3.2.2] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationQuery.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2Subject)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationQuery"/> class.
            </summary>
            <param name="subject">The subject of the query.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationQuery.RequestedAuthenticationContext">
            <summary>
            Gets or sets the requested authentication context.
            </summary>
            <value>The requested authentication context.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthenticationQuery.SessionIndex">
            <summary>
            Gets or sets an optional filter for possible responses.
            </summary>
            <value>The filter for possible responses.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.ServiceType">
            <summary>
            Specifies the kind of messages the <c>Saml2Service</c> can process.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.ServiceType.ArtifactResolution">
            <summary>
            A service that can resolve artifacts into their original messages.
            </summary>
            <remarks>See [SamlCore, 3.5] for more details.</remarks>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.ServiceType.AssertionConsumer">
            <summary>
            A service that can process <c>Response</c> messages with assertions.
            </summary>
            <remarks>See [SamlCore, 3.3.3, 3.3.4] for more details.</remarks>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.ServiceType.AssertionIDRequest">
            <summary>
            A service that can resolve <c>AssertionIdRequest</c> messages.
            </summary>
            <remarks>See [SamlCore, 3.3.1] for more details.</remarks>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.ServiceType.AttributeQuery">
            <summary>
            A service that can resolve <c>AttributeQuery</c> messages.
            </summary>
            <remarks>See [SamlCore, 3.3.2.3] for more details.</remarks>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.ServiceType.AuthnQuery">
            <summary>
            A service that can resolve <c>AuthenticationQuery</c> messages.
            </summary>
            <remarks>See [SamlCore, 3.3.2.2] for more details.</remarks>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.ServiceType.AuthzQuery">
            <summary>
            A service that can resolve <c>AuthorizationDecisionQuery</c> messages.
            </summary>
            <remarks>See [SamlCore, 3.3.2.4] for more details.</remarks>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.ServiceType.ManageNameID">
            <summary>
            A service that can resolve <c>ManageNameIdRequest</c> messages.
            </summary>
            <remarks>See [SamlCore, 3.6] for more details.</remarks>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.ServiceType.NameIDMapping">
            <summary>
            A service that can resolve <c>NameIdMappingRequest</c> messages.
            </summary>
            <remarks>See [SamlCore, 3.8] for more details.</remarks>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.ServiceType.SingleLogout">
            <summary>
            A service that can resolve <c>LogoutRequest</c> messages.
            </summary>
            <remarks>See [SamlCore, 3.7] for more details.</remarks>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.ServiceType.SingleSignOn">
            <summary>
            A service that can resolve <c>AuthenticationRequest</c> messages.
            </summary>
            <remarks>See [SamlCore, 3.4] for more details.</remarks>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.AuthorizationDecisionQuery">
            <summary>
            The <c>AuthorizationDecisionQuery</c> class requests whether a user has permission to access a given resource.
            </summary>
            <remarks>See the samlp:AuthzDecisionQuery element defined in [SamlCore, 3.3.2.4] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AuthorizationDecisionQuery.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2Subject)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.AuthorizationDecisionQuery"/> class.
            </summary>
            <param name="subject">The subject of the query.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthorizationDecisionQuery.Actions">
            <summary>
            Gets the actions for which authorization is requested.
            </summary>
            <value>The actions for which authorization is requested.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthorizationDecisionQuery.Evidence">
            <summary>
            Gets or sets a set of assertions that the SAML authority MAY rely on in making its authorization decision.
            </summary>
            <value>The assertions that the SAML authority MAY rely on in making its authorization decision.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AuthorizationDecisionQuery.Resource">
            <summary>
            Gets or sets the Uri indicating the resource for which authorization is requested.
            </summary>
            <value>The Uri indicating the resource for which authorization is requested.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.AttributeQuery">
            <summary>
            The <c>AttributeQuery</c> class requests additional information about a subject.
            </summary>
            <remarks>See the samlp:AttributeQuery element defined in [SamlCore, 3.3.2.3] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AttributeQuery.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2Subject)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.AttributeQuery"/> class.
            </summary>
            <param name="subject">The SAML subject whose attributes are being queried.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.AttributeQuery.Attributes">
            <summary>
            Gets the attributes to be returned. If no attributes are specified, it indicates that all
            attributes allowed by policy are requested.
            </summary>
            <value>The list of attributes to be returned.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.IAnyActionContract">
            <summary>
            The <c>IAnyActionContract</c> interface represents a raw SOAP contract.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.IAnyActionContract.ProcessRequest(System.ServiceModel.Channels.Message)">
            <summary>
            Processes the incoming SOAP message and generates an outgoing SOAP message.
            </summary>
            <param name="request">The request as a SOAP message.</param>
            <returns>The response as a SOAP message.</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.Web.Saml2AuthenticationModule">
            <summary>
            The <c>Saml2AuthenticationModule</c> class provides support for the SAML 2.0 passive protocols for ASP.NET and MVC applications.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Web.Saml2AuthenticationModule"/> class.
            </summary>
            <remarks>
            This constructor reads web.config to identify the location of SAML metadata documents that describe the trust
            relationships in place.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.#ctor(System.String,Microsoft.IdentityModel.Protocols.Saml2.EndpointConfiguration,Microsoft.IdentityModel.Protocols.Saml2.EntityConfiguration,System.Boolean,Microsoft.IdentityModel.Protocols.Saml2.BindingSerializerCollection,Microsoft.IdentityModel.Protocols.Saml2.ServiceCollection,Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Web.Saml2AuthenticationModule"/> class.
            </summary>
            <remarks>This constructor is exposed for suites and sprint-1 work. Long term, it will only be
            used for suites.  Real RPs will be configured through XML.</remarks>
            <param name="entityId">The entity ID of this entity.</param>
            <param name="endpointConfiguration">The local endpoints on which this module will accept SAML messages.</param>
            <param name="entityConfiguration">The remote SAML authorities this module will trust.</param>
            <param name="passiveRedirectEnabled">Whether or not to automatically initiate authentication when an unauthorized request is received.</param>
            <param name="bindingSerializers">The set of binding serializers to use.</param>
            <param name="services">The set of services to use.</param>
            <param name="messageDecorator">The message decorate to use.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.FlattenEntitiesDescriptor(System.Collections.Generic.List{Microsoft.IdentityModel.Protocols.WSFederation.Metadata.EntityDescriptor},Microsoft.IdentityModel.Protocols.WSFederation.Metadata.EntitiesDescriptor)">
            <summary>
            Takes an arbitrarily deeply-nested EntitiesDescriptor structure and flattens it and its descendants into
            a list.
            </summary>
            <param name="trustedPartners">The list into which the flattened entries will be inserted.</param>
            <param name="descriptor">The EntitiesDescriptor object to be flattened.</param>
            <remarks>Nested EntitiesDescriptor are a fairly rare scenario and are unlikely to be nested more than
            a few deep, so a recursive implementation is fine.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.DiscoverIdentityProvider(System.String)">
            <summary>
            Discovers the user's preferred identity provider.
            </summary>
            <param name="returnUrl">The URI which the user is attempting to access.</param>
            <returns>The unique identifier of the identity provider with which the user should be authenticated.</returns>
            <remarks>Application developers may override this to implement an identity provider discovery strategy
            of their choosing, e.g. a selection page, a common domain cookie, or other. Application developers may 
            use the returnUrl parameter to filter the list of identity providers, or to 
            re-start the authentication process if they need to show a user interface to the user.</remarks>
            <exception cref="T:System.ArgumentException">When returnUrl is null.</exception>
            <exception cref="T:System.InvalidOperationException">When there are no configured SAML identity providers.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.Initialize(System.String,Microsoft.IdentityModel.Protocols.Saml2.EndpointConfiguration,Microsoft.IdentityModel.Protocols.Saml2.EntityConfiguration,System.Boolean,Microsoft.IdentityModel.Protocols.Saml2.BindingSerializerCollection,Microsoft.IdentityModel.Protocols.Saml2.ServiceCollection,Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator)">
            <summary>
            Initializes the members of this class.
            </summary>
            <param name="entityId">The entity ID of this entity.</param>
            <param name="endpointConfiguration">The local endpoints on which this module will accept SAML messages.</param>
            <param name="entityConfiguration">The remote SAML authorities this module will trust.</param>
            <param name="passiveRedirectEnabled">Whether or not to automatically initiate authentication when an unauthorized request is received.</param>
            <param name="bindingSerializers">The set of binding serializers to use.</param>
            <param name="services">The set of services to use.</param>
            <param name="messageDecorator">The message decorate to use.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.OnAuthorizationFailed(Microsoft.IdentityModel.Web.AuthorizationFailedEventArgs)">
            <summary>
            Raises the AuthorizationFailed event.
            </summary>
            <param name="e">The <see cref="T:Microsoft.IdentityModel.Web.AuthorizationFailedEventArgs"/> arguments for the event.</param>
            <remarks>This function should be called after the EndRequest event in the HTTP pipeline.
            Thread.CurrentPrincipal.Identity should not be null.  This is guaranteed to be the case if you have the
            SAM module registered, as its post authenticate request event creates an empty identity.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.OnRedirectingToIdentityProvider(Microsoft.IdentityModel.Web.RedirectingToSaml2IdentityProviderEventArgs)">
            <summary>
            Raises the RedirectingToIdentityProvider event.
            </summary>
            <param name="e">The <see cref="T:Microsoft.IdentityModel.Web.RedirectingToSaml2IdentityProviderEventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.OnSecurityTokenReceived(Microsoft.IdentityModel.Web.SecurityTokenReceivedEventArgs)">
            <summary>
            Raises the SecurityTokenReceived event.
            </summary>
            <param name="e">The <see cref="T:Microsoft.IdentityModel.Web.SecurityTokenReceivedEventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.OnSecurityTokenValidated(Microsoft.IdentityModel.Web.SecurityTokenValidatedEventArgs)">
            <summary>
            Raises the SecurityTokenValidated event.
            </summary>
            <param name="e">The <see cref="T:Microsoft.IdentityModel.Web.SecurityTokenValidatedEventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.OnSessionSecurityTokenCreated(Microsoft.IdentityModel.Web.SessionSecurityTokenCreatedEventArgs)">
            <summary>
            Raises the SessionSecurityTokenCreated event.
            </summary>
            <param name="e">The <see cref="T:Microsoft.IdentityModel.Web.SessionSecurityTokenCreatedEventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.OnSignedIn(System.EventArgs)">
            <summary>
            Raises the SignedIn event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.OnSignInError(Microsoft.IdentityModel.Web.Controls.ErrorEventArgs)">
            <summary>
            Raises the SignInError event.
            </summary>
            <param name="e">The <see cref="T:Microsoft.IdentityModel.Web.Controls.ErrorEventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.OnSignedOut(Microsoft.IdentityModel.Protocols.Saml2.SignedOutEventArgs)">
            <summary>
            Raises the SignedOut event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.OnSignOutError(Microsoft.IdentityModel.Web.Controls.ErrorEventArgs)">
            <summary>
            Raises the SignOutError event.
            </summary>
            <param name="e">The <see cref="T:Microsoft.IdentityModel.Web.Controls.ErrorEventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SetPrincipalAndWriteSessionToken(Microsoft.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
            <summary>
            Sets the thread principal and write the cookie.
            </summary>
            <param name="sessionToken">The <see cref="T:Microsoft.IdentityModel.Tokens.SessionSecurityToken"/> built up by authentication.</param>
            <param name="isSession">If true, a cookie representing the session included with the response.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SignIn">
            <summary>
            Begins an SP-initiated sign-in flow.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SignIn(System.String)">
            <summary>
            Begins an SP-initiated sign-in flow.
            </summary>
            <remarks>Upon successful authentication, return the user to the specified page.</remarks>
            <param name="returnUrl">The URL to return the user to upon successful authentication.</param>
            <exception cref="T:System.ArgumentException">When returnUri is null or empty.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SignIn(System.String,System.String)">
            <summary>
            Begins SP-initiated sign-in flow using a specific identity provider.
            </summary>
            <remarks>Upon successful authentication, returns the user to the specified page.</remarks>
            <param name="returnUrl">The URL to return the user to upon successful authentication.</param>
            <param name="identityProvider">The identity provider to use to authenticate the user.</param>
            <exception cref="T:System.ArgumentException">When returnUrl or identityProvider is null or empty.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SignIn(System.String,System.String,Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest)">
            <summary>
            Begin SP-initiated sign-in flow using a specific identity provider and specific AuthenticationRequest parameters.  
            </summary>
            <remarks>Upon successful authentication, return the user to the specified page.</remarks>
            <param name="returnUrl">The URI to return the user to upon successful authentication.</param>
            <param name="identityProvider">The identity provider to use to authenticate the user.</param>
            <param name="authenticationRequest">The authentication request to base the request on.</param>
            <exception cref="T:System.ArgumentException">When returnUrl or identityProvider is null or empty.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SignOut">
            <summary>
            Initiates sign-out of all SAML participants.
            </summary>
            <remarks>
            Upon completion, the user will be redirected to the current page's URL.
            </remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SignOut(System.String)">
            <summary>
            Initiates sign-out of all SAML participants.
            </summary>
            <remarks>Upon completion, the user will be redirected to the given page.</remarks>
            <param name="returnUrl">The page to redirect the user to upon completion of sign-out.</param>
            <exception cref="T:System.ArgumentException">When returnUrl is null or empty.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
            <summary>
            Handle the HTTP pipeline AuthenticateRequest event, after ensuring that the module has been initialized.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data associated with the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.OnEndRequest(System.Object,System.EventArgs)">
            <summary>
            Hooks the EndRequest event to automatically begin the user authentication process if the page failed to load
            due to an authorization issue.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data associated with the event.</param>
            <remarks>
            This is ignored unless PassiveRedirectEnabled = true
            </remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.InitializeModule(System.Web.HttpApplication)">
            <summary>
            Initializes the module and prepares it to handle requests by wiring up to events in the HTTP request pipeline.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpApplication"/> that provides access to the methods, properties, 
            and events common to all application objects within an ASP.NET application.</param>
            <exception cref="T:System.ArgumentNullException">When context is null.</exception>
        </member>
        <member name="P:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.Current">
            <summary>
            Gets the Saml2AuthenticationModule currently in use.
            </summary>
            <value>The Saml2AuthenticationModule currently in use.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.BindingSerializers">
            <summary>
            Gets the binding serializers for SAML protocol messages.
            </summary>
            <value>The binding serializers for SAML protocol messages.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.EndpointConfiguration">
            <summary>
            Gets the local endpoints on which this module accepts SAML messages.
            </summary>
            <value>The local endpoints on which this module accepts SAML messages.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.EntityConfiguration">
            <summary>
            Gets the remote SAML authorities this module trusts.
            </summary>
            <value>The remote SAML authorities this module trusts.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.PassiveRedirectEnabled">
            <summary>
            Gets a value indicating whether or not the module will automatically begin the authentication process when an unauthorized request is received.
            </summary>
            <value>Whether or not the module will automatically begin the authentication process when an unauthorized request is received.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.ServiceProviderId">
            <summary>
            Gets the service provider's entity ID.
            </summary>
            <value>The service provider's entity ID.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.Services">
            <summary>
            Gets the set of SAML services that this module implements.
            </summary>
            <value>The set of SAML services that this module implements.</value>
        </member>
        <member name="E:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.AuthorizationFailed">
            <summary>
            Occurs when a request results in an unauthorized error.
            </summary>
        </member>
        <member name="E:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.RedirectingToIdentityProvider">
            <summary>
            Occurs before the user is redirected to an identity provider for authentication.
            </summary>
        </member>
        <member name="E:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SecurityTokenReceived">
            <summary>
            Occurs when a response message with a security token has been received.
            </summary>
        </member>
        <member name="E:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SecurityTokenValidated">
            <summary>
            Occurs when the security token in a response message has been validated.
            </summary>
        </member>
        <member name="E:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SessionSecurityTokenCreated">
            <summary>
            Occurs when a session security token has been created.
            </summary>
        </member>
        <member name="E:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SignedIn">
            <summary>
            Occurs when a user has been authenticated.
            </summary>
            <remarks>Thread.CurrentPrincipal is set to the user's identity before this event is raised.</remarks>
        </member>
        <member name="E:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SignedOut">
            <summary>
            Occurs when a user has been signed out.
            </summary>
        </member>
        <member name="E:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SignInError">
            <summary>
            Occurs when a sign-in error has occurred.
            </summary>
        </member>
        <member name="E:Microsoft.IdentityModel.Web.Saml2AuthenticationModule.SignOutError">
            <summary>
            Occurs when a sign-out error has occurred.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Web.RedirectingToSaml2IdentityProviderEventArgs">
            <summary>
            The <c>RedirectingToSaml2IdentityProviderEventArgs</c> provides information supplied to the <c>RedirectingToSaml2IdentityProvider</c> event.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.RedirectingToSaml2IdentityProviderEventArgs.#ctor(Microsoft.IdentityModel.Protocols.Saml2.OutgoingMessageContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Web.RedirectingToSaml2IdentityProviderEventArgs"/> class.
            </summary>
            <param name="messageContainer">The message container with outgoing message to send to identity provider.</param>
            <exception cref="T:System.ArgumentNullException">When messageContainer is null.</exception>
        </member>
        <member name="P:Microsoft.IdentityModel.Web.RedirectingToSaml2IdentityProviderEventArgs.MessageContainer">
            <summary>
            Gets or sets the message container that will be sent to the identity provider.
            </summary>
            <value>The message container that will be sent to the identity provider.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Status">
            <summary>
            The <c>Status</c> class represents the status of processing the associated request.
            </summary>
            <remarks>See the samlp:Status element defined in [SamlCore, 3.2.2.1] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Status.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Status"/> class.
            </summary>
            <param name="statusCode">The top-level status code.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Status.#ctor(Microsoft.IdentityModel.Protocols.Saml2.StatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Status"/> class.
            </summary>
            <param name="statusCode">The status code.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Status.StatusCode">
            <summary>
            Gets or sets a set of nested status codes.
            </summary>
            <details>
            The first status code must be one of the codes from StatusCodes.TopLevelCodes.
            </details>
            <value>A set of nested status codes.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Status.StatusMessage">
            <summary>
            Gets or sets the message associated with the status.
            </summary>
            <value>The message associated with the status.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Status.StatusDetail">
            <summary>
            Gets custom XML elements associated with the status.
            </summary>
            <value>The custom XML elements associated with the status.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Artifact">
            <summary>
            The <c>Artifact</c> class represents a SAML Artifact message.
            </summary>
            <remarks>See [SAMLBind, 3.6.4.2] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Artifact.IssuerToSourceId(System.String)">
            <summary>
            Generates the SourceID as SHA1(issuer).
            </summary>
            <param name="issuer">The artifact issuer.</param>
            <returns>The artifact SourceID.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Artifact.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Artifact"/> class.
            </summary>
            <param name="base64Artifact">The artifact in a Base64-encoded string.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Artifact.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Artifact"/> class.
            </summary>
            <param name="binaryArtifact">The artifact in byte array form.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Artifact.#ctor(System.Int32,System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Artifact"/> class.
            </summary>
            <param name="endpointIndex">The artifact endpoint index.</param>
            <param name="sourceId">The artifact SourceID.</param>
            <param name="messageHandle">The artifact MessageHandle.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Artifact.#ctor(System.Int32,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Artifact"/> class.
            </summary>
            <param name="endpointIndex">The artifact endpoint index.</param>
            <param name="issuer">The artifact issuer.</param>
            <param name="messageHandle">The artifact MessageHandle.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Artifact.FromByteArray(System.Byte[])">
            <summary>
            Deserializes artifact properties from byte array artifact representation.
            </summary>
            <param name="binaryArtifact">The artifact as a byte array.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Artifact.FromBase64String(System.String)">
            <summary>
            Deserializes artifact properties from Base64 encoded string artifact representation.
            </summary>
            <param name="base64Artifact">The artifact encoded as Base64 string.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Artifact.ToByteArray">
            <summary>
            Serializes artifact into byte array representation.
            </summary>
            <returns>The byte array representation of artifact.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Artifact.ToBase64String">
            <summary>
            Serializes artifact into Base64-encoded string representation.
            </summary>
            <returns>The base64-encoded string representation of artifact.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.Artifact.VerifyIssuer(System.String)">
            <summary>
            Verifies that the issuer corresponds to the SourceID.
            </summary>
            <param name="issuer">The issuer to be verified.</param>
            <returns>true, if <c>issuer</c> corresponds to the artifact SourceID; otherwise false.</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Artifact.EndpointIndex">
            <summary>
            Gets the artifact endpoint index value.
            </summary>
            <value>The artifact endpoint index.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Artifact.Issuer">
            <summary>
            Gets the artifact issuer.
            </summary>
            <value>The value of the artifact issuer.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Artifact.MessageHandle">
            <summary>
            Gets the artifact MessageHandle.
            </summary>
            <value>The value of the artifact MessageHandle.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Artifact.SourceId">
            <summary>
            Gets the artifact SourceId.
            </summary>
            <value>The value of the artifact SourceId.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.Artifact.TypeCode">
            <summary>
            Gets the artifact TypeCode.
            </summary>
            <value>The value of the artifact TypeCode. Only artifact of type 0x4 currently supported.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.RequestedAuthenticationContext">
            <summary>
            The <c>RequestedAuthenticationContext</c> class specifies the authentication context requirements of authentication
            statements returned in response to a request or query.
            </summary>
            <remarks> See the samlp:RequestedAuthnContext element defined in [SamlCore, 3.3.2.2.1] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.RequestedAuthenticationContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.RequestedAuthenticationContext"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.RequestedAuthenticationContext.#ctor(Microsoft.IdentityModel.Protocols.Saml2.AuthenticationContextComparisonType,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.RequestedAuthenticationContext"/> class.
            </summary>
            <param name="comparisonType">The comparison rule used by the responder to match the references.</param>
            <param name="reference">The URI of the required authentication context reference.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.RequestedAuthenticationContext.Comparison">
            <summary>
            Gets or sets the comparison rule used by the responder to match the 
            references.
            </summary>
            <remarks>See [SamlCore, 3.3.2.2.1] for more details.</remarks>
            <details>
            The default is Exact.
            </details>
            <value>The comparison rule used by the responder to match the references.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.RequestedAuthenticationContext.References">
            <summary>
            Gets the ordered list of URIs identifying acceptable authentication
            context classes or declarations, most preferred first.
            </summary>
            <remarks>See [SamlCore, 3.3.2.2.1] for more details.</remarks>
            <details>
            If this collection is empty an exception will occur during serialization.
            </details>
            <value>The ordered list of URIs identifying acceptable authentication
            context classes or declarations, most preferred first.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.RequestedAuthenticationContext.ReferenceType">
            <summary>
            Gets or sets whether the References refer to authentication context classes or 
            authentication context declarations.
            </summary>
            <value>Whether the References refer to authentication context classes or 
            authentication context declarations.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Web.CookieBasedStringStorage">
            <summary>
            The <c>CookieBasedStringStorage</c> class provides a string->string storage backed by cookies.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.CookieBasedStringStorage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Web.CookieBasedStringStorage"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.CookieBasedStringStorage.TryAdd(System.String,System.String,System.DateTime)">
            <summary>
            Attempt to add a item to the cache.
            </summary>
            <param name="key">The key to use when adding item.</param>
            <param name="item">The item of type 'T' to add to cache.</param>
            <param name="expirationTime">The expiration time of the entry.</param>
            <returns>true if item was added, false if item was not added.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.CookieBasedStringStorage.TryFind(System.String)">
            <summary>
            Attempts to find an item in the store.
            </summary>
            <param name="key">The item to search for.</param>
            <returns>true if item is in cache, false otherwise.</returns>
            <remarks>The item may be expired and would be purged next cycle.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.CookieBasedStringStorage.TryGet(System.String,System.String@)">
            <summary>
            Attempts to get an item from the store.
            </summary>
            <param name="key">The item to seach for.</param>
            <param name="item">The object reference that will be set for the retrieved item.</param>
            <returns>true if item is found, false otherwise.</returns>
            <remarks>The item may be expired and would be purged next cycle.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Web.CookieBasedStringStorage.TryRemove(System.String)">
            <summary>
            Attempts to remove an item from the store.
            </summary>
            <param name="key">The item to remove.</param>
            <returns>true if item was removed, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.HttpPostBindingParameters">
            <summary>
            The <c>HttpPostBindingParameters</c> class contains locale-independent string constants for serializing form fields in an HTTP POST submission.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService">
            <summary>
            The <c>AssertionConsumerService</c> class implements methods to process SAML sign-on response messages.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler,Microsoft.IdentityModel.Protocols.Saml2.MessageValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService"/> class.
            </summary>
            <param name="saml2SecurityTokenHandler">The <c>Saml2SecurityTokenHandler</c> to use when validating incoming tokens.</param>
            <param name="messageValidator">The <c>MessageValidator</c> to use when validating incoming messages.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler,Microsoft.IdentityModel.Protocols.Saml2.MessageValidator,Microsoft.IdentityModel.Protocols.Saml2.SessionParticipantStorage,Microsoft.IdentityModel.Protocols.Saml2.LoggedOutSessionStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService"/> class.
            </summary>
            <param name="saml2SecurityTokenHandler">The <c>Saml2SecurityTokenHandler</c> to use when validating incoming tokens.</param>
            <param name="messageValidator">The <c>MessageValidator</c> to use when validating incoming messages.</param>
            <param name="sessionParticipantStorage">The <c>SessionParticipantStorage</c> to track authenticated users.</param>
            <param name="loggedOutSessionStorage">The <c>LoggedOutSessionStorage</c> to track sessions that have been invalidated by LogoutRequest messages.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.AddSessionParticipant(Microsoft.IdentityModel.Tokens.Saml2.Saml2NameIdentifier,Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion)">
            <summary>
            Adds the participant to the set of session participants.
            </summary>
            <param name="issuer">The authority identifying the subject.</param>
            <param name="saml2Assertion">The assertion containing claims about the subject.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.CanProcess(Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Determines whether AssertionConsumerService can process incoming SAML message.
            </summary>
            <param name="messageContainer">The incoming SAML message with context.</param>
            <returns>true, if can process.</returns>
            <remarks>This method should not throw.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.OnSecurityTokenReceived(Microsoft.IdentityModel.Web.SecurityTokenReceivedEventArgs)">
            <summary>
            Raises the SecurityTokenReceived event.
            </summary>
            <param name="args">The <see cref="T:Microsoft.IdentityModel.Web.SecurityTokenReceivedEventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.OnSecurityTokenValidated(Microsoft.IdentityModel.Web.SecurityTokenValidatedEventArgs)">
            <summary>
            Raises the SecurityTokenValidated event.
            </summary>
            <param name="args">The <see cref="T:Microsoft.IdentityModel.Web.SecurityTokenValidatedEventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.OnSignedIn(Microsoft.IdentityModel.Protocols.Saml2.SignedInEventArgs)">
            <summary>
            Raises the SignedIn event.
            </summary>
            <param name="args">The <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SignedInEventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.OnSignInError(Microsoft.IdentityModel.Web.Controls.ErrorEventArgs)">
            <summary>
            Raises the SignInError event.
            </summary>
            <param name="args">The <see cref="T:Microsoft.IdentityModel.Web.Controls.ErrorEventArgs"/> arguments for the event.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.ProcessCore(Microsoft.IdentityModel.Protocols.Saml2.MessageContainer)">
            <summary>
            Processes the incoming SAML message.
            </summary>
            <param name="messageContainer">The incoming SAML message with context.</param>
            <returns>Always returns null.</returns>
            <remarks>This method must not throw except for fatal exceptions. Errors must raise SignInError event.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.SelectSingleSignOnEndpoint(System.String,System.Collections.Generic.IEnumerable{Microsoft.IdentityModel.Protocols.WSFederation.Metadata.ProtocolEndpoint})">
            <summary>
            Selects the single sign on endpoint to send the authentication request to.  If a default endpoint is specified, it will be selected.
            </summary>
            <param name="entityId">The unique identifier of the identity provider whose endpoints are being considered.</param>
            <param name="endpoints">The set of single sign on endpoints.</param>
            <returns>The single sign on endpoint to send the authentication request to.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.SignIn(System.String,Microsoft.IdentityModel.Protocols.WSFederation.Metadata.EntityDescriptor,Microsoft.IdentityModel.Protocols.Saml2.AuthenticationRequest)">
            <summary>
            Begins SP-initiated sign-in flow using a specific identity provider and specific AuthenticationRequest parameters.  
            Upon successful authentication, will return the user to the specified page.
            </summary>
            <param name="returnUrl">The URL to return the user to upon successful authentication.</param>
            <param name="identityProvider">The identity provider to use to authenticate the user.</param>
            <param name="authenticationRequest">The authentication request to base the request on.</param>
            <exception cref="T:System.ArgumentException">When returnUrl or identityProvider is null.</exception>
            <returns>An <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.OutgoingMessageContainer"/> containing the AuthenticationRequest to send.</returns>
        </member>
        <member name="E:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.SecurityTokenReceived">
            <summary>
            Occurs when a security token has been extracted from the response message for processing.
            </summary>
            <remarks>
            An event handler may modify the token before it is validated.
            </remarks>
        </member>
        <member name="E:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.SecurityTokenValidated">
            <summary>
            Occurs when a security token has been validated and principal has been created.
            </summary>
            <remarks>
            An event handler may modify the principal before it is set as current.
            </remarks>
        </member>
        <member name="E:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.SignedIn">
            <summary>
            Occurs when the user is signed in.
            </summary>
        </member>
        <member name="E:Microsoft.IdentityModel.Protocols.Saml2.AssertionConsumerService.SignInError">
            <summary>
            Occurs when a signin error has occurred.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer">
            <summary>
            The <c>SoapBindingSerializer</c> class serializes and deserializes SAML protocol messages for the SOAP SAML bindings.
            </summary>
            <remarks>See [SamlBind, 3.2] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer"/> class.
            </summary>
            <param name="saml2ProtocolSerializer">The <c>Saml2ProtocolSerializer</c> to be used during serialization.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer,System.ServiceModel.Channels.MessageVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer"/> class.
            </summary>
            <param name="saml2ProtocolSerializer">The <c>Saml2ProtocolSerializer</c> to be used during serialization.</param>
            <param name="soapMessageVersion">The version of the SOAP message created during serialization.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer.ReadMessage(System.ServiceModel.Channels.Message)">
            <summary>
            Reads SAML protocol message from SOAP message.
            </summary>
            <param name="soapMessage">The incoming SOAP message.</param>
            <returns>The SAML protocol message.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer.WriteMessage(Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Writes SAML message into a SOAP message.
            </summary>
            <param name="samlMessage">The SAML message to write into the SOAP body.</param>
            <returns>The SOAP message.</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer.Saml2ProtocolSerializer">
            <summary>
            Gets the serializer for the SAML protocol message used during serialization.
            </summary>
            <value>The protocol serializer this serializer uses.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer.SoapMessageVersion">
            <summary>
            Gets SOAP message version used during serialization.
            </summary>
            <value>The SOAP message version this serializer uses.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer.SamlBodyWriter">
            <summary>
            The <c>SamlBodyWriter</c> class is a SOAP body writer that writes SAML message.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer.SamlBodyWriter.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Saml2ProtocolSerializer,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer.SamlBodyWriter"/> class.
            </summary>
            <param name="saml2ProtocolSerializer">The SAML protocol serializer to be used during serialization.</param>
            <param name="saml2Message">SAML message to be placed into SOAP body.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.SoapBindingSerializer.SamlBodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
            <summary>
            Writes the actual SOAP message's body.
            </summary>
            <param name="writer">XML writer that points to SOAP body.</param>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.ManageNameIdRequest">
            <summary>
            The <c>ManageNameIdRequest</c> class requests a partner to change the SAML name identifier used to identify a subject.
            </summary>
            <remarks>See the samlp:ManageNameIDRequest element defined in [SamlCore, 3.6.1] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ManageNameIdRequest.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2NameIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.ManageNameIdRequest"/> class.
            </summary>
            <param name="identifier">The principal whose name identifier is to be managed.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.ManageNameIdRequest.Identifier">
            <summary>
            Gets or sets the name identifier and associated descriptive data (in plaintext or encrypted form) that specify the
            principal as currently recognized by the identity and service providers prior to this request.
            </summary>
            <value>The name identifier and associated descriptive data (in plaintext or encrypted form) that specify the
            principal.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.ManageNameIdRequest.NewIdentifier">
            <summary>
            Gets or sets the new identifier value (in plaintext or encrypted form) to be used when communicating with the
            requesting provider concerning this principal.
            </summary>
            <value>The new identifier value (in plaintext or encrypted form) to be used when communicating with the
            requesting provider concerning this principal.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.ManageNameIdRequest.Terminate">
            <summary>
            Gets or sets a value indicating whether the use of the old identifier must be terminated.
            </summary>
            <value>Whether the use of the old identifier must be terminated.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.ManageNameIdResponse">
            <summary>
            The <c>ManageNameIdResponse</c> class contains the result of a ManageNameIdRequest operation.
            </summary>
            <remarks>See the samlp:ManageNameIDResponse element defined in [SamlCore, 3.6.2] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ManageNameIdResponse.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Status)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.ManageNameIdResponse"/> class.
            </summary>
            <param name="status">The SAML status code associated with this response.</param>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.OutgoingMessageContainer">
            <summary>
            The <c>OutgoingMessageContainer</c> class represents an outgoing SAML protocol message with its context and binding information.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.OutgoingMessageContainer.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Saml2Message,Microsoft.IdentityModel.Protocols.WSFederation.Metadata.EntityDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.OutgoingMessageContainer"/> class.
            </summary>
            <param name="samlMessage">The SAML message that will be sent or that was received.</param>
            <param name="recipientDescriptor">The recipient that this message will be sent to.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.OutgoingMessageContainer.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Saml2Message,Microsoft.IdentityModel.Protocols.WSFederation.Metadata.EntityDescriptor,Microsoft.IdentityModel.Protocols.WSFederation.Metadata.ProtocolEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.OutgoingMessageContainer"/> class.
            </summary>
            <param name="samlMessage">The SAML message that will be sent or that was received.</param>
            <param name="recipientDescriptor">The recipient that this message will be sent to.</param>
            <param name="endpoint">The endpoint and binding to which the message will be sent or on which the message was received.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.OutgoingMessageContainer.RecipientDescriptor">
            <summary>
            Gets the recipient that this message will be sent to.
            </summary>
            <value>The recipient that this message will be sent to.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.NameIdentifierFormats">
            <summary>
            The <c>NameIdentifierFormats</c> class contains constants to be used in the Format attribute of the NameID,
            NameIDPolicy, or Issuer elements to refer to common formats for the
            content of the elements and the associated processing rules, if any.
            </summary>
            <remarks>
            See [SamlCore, 8.3] for more details.
            </remarks>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.NameIdentifierFormats.Unspecified">
            <summary>
            The interpretation of the content of the element is left to 
            individual implementations. See [SamlCore, 8.3.1] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.NameIdentifierFormats.EmailAddress">
            <summary>
            Indicates that the content of the element is in the form of an 
            email address, specifically "addr-spec" as defined in 
            [RFC 2822, 3.4.1]. See [SamlCore, 8.3.2] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.NameIdentifierFormats.X509SubjectName">
            <summary>
            Indicates that the content of the element is in the form specified
            for the contents of the X509SubjectName element from [XMLSig].
            See [SamlCore, 8.3.3] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.NameIdentifierFormats.WindowsDomainQualifiedName">
            <summary>
            Indicates that the content of the element is a Windows domain 
            qualified name. See [SamlCore, 8.3.4] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.NameIdentifierFormats.Kerberos">
            <summary>
            Indicates that the content of the element is in the form of a 
            Kerberos principal name using the format name[/instance]@REALM.
            See [SamlCore, 8.3.5] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.NameIdentifierFormats.Entity">
            <summary>
            Indicates that the content of the element is a URI identifying an
            entity that provides SAML-based services (such as a SAML authority,
            requester, or responder) or is a participant in SAML profiles (such
            as a service provider supporting the browser SSO profile). 
            See [SamlCore, 8.3.6] for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.NameIdentifierFormats.Persistent">
            <summary>
            Indicates that the content of the element is a persistent opaque 
            identifier for a principal that is specific to an identity provider
            and a service provider or affiliation of service providers.
            See [SamlCore, 8.3.7] for more details and restrictions.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.NameIdentifierFormats.Transient">
            <summary>
            Indicates that the content of the element is an identifier with 
            transient semantics and SHOULD be treated as an opaque and 
            temporary value by the relying party. See [SamlCore, 8.3.8]
             for more details.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Protocols.Saml2.Constants.NameIdentifierFormats.Encrypted">
            <summary>
            When included in the Format attribute of the NameIDPolicy attribute,
            requests that the resulting identifier be encrypted. See [SamlCore, 3.4.1.1]
             for more details.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.Constants.AuthenticationContextComparisonTypeValues">
            <summary>
            The <c>AuthenticationContextComparisonTypeValues</c> class represents the enumeration values of the samlp:AuthnContextComparisonType 
            defined in [SamlCore, 3.3.2.2.1].
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator">
            <summary>
            The <c>MessageDecorator</c> class sets common properties such as Issuer and SigningCredentials on 
            outgoing SAML messages.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator"/> class.
            </summary>
            <param name="entityId">The unique identifier of this entity.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator.#ctor(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator"/> class.
            </summary>
            <param name="entityId">The unique identifier of this entity.</param>
            <param name="signingCertificate">The X.509 certificate with which to sign messages.</param>
            <param name="signAuthenticationRequests">Whether or not every AuthenticationRequest must be signed.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator.CreateSigningCredentials(Microsoft.IdentityModel.Protocols.WSFederation.Metadata.EntityDescriptor,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message,Microsoft.IdentityModel.Protocols.WSFederation.Metadata.ProtocolEndpoint)">
            <summary>
            Creates the credentials that will be used to sign an outgoing message.
            </summary>
            <param name="recipientDescriptor">The recipient that the message is being sent to.</param>
            <param name="message">The message that will be sent.</param>
            <param name="endpoint">The endpoint that the message is being sent to.</param>
            <returns>The credentials that should be used to sign this message.</returns>
            <remarks>This method may return null to indicate that no signing credentials could be found, or to indicate 
            that that no signature is necessary.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator.SetProperties(Microsoft.IdentityModel.Protocols.WSFederation.Metadata.EntityDescriptor,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message,Microsoft.IdentityModel.Protocols.WSFederation.Metadata.ProtocolEndpoint)">
            <summary>
            Decorates the given <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2Message">Saml2Message</see> with common values.
            </summary>
            <param name="recipientDescriptor">The recipient that this message will be sent to.</param>
            <param name="message">The message to be decorated.</param>
            <param name="endpoint">The endpoint to which the message will be sent.</param>
            <exception cref="T:System.ArgumentNullException">When message or endpoint is null.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator.SetPropertiesCore(Microsoft.IdentityModel.Protocols.WSFederation.Metadata.EntityDescriptor,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message,Microsoft.IdentityModel.Protocols.WSFederation.Metadata.ProtocolEndpoint)">
            <summary>
            Decorates the given <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.Saml2Message">Saml2Message</see> with common values.
            </summary>
            <param name="recipientDescriptor">The recipient that this message will be sent to.</param>
            <param name="message">The message to be decorated.</param>
            <param name="endpoint">The endpoint to which the message will be sent.</param>
            <exception cref="T:System.ArgumentNullException">When message or endpoint is null.</exception>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator.EntityId">
            <summary>
            Gets the unique identifier of this entity.
            </summary>
            <value>The unique identifier of this entity.</value>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator.SignAuthenticationRequests">
            <summary>
            Gets a value indicating whether this decorator will sign all outgoing authentication requests.
            </summary>
            <value>True if this decorator should sign all outgoing authentication requests; false, otherwise.</value>
            <remarks>This property maps on to the "SignsAuthnRequests" attribute of SAML metadata.</remarks>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.MessageDecorator.SigningCertificate">
            <summary>
            Gets the X.509 certificate with which to sign outgoing messages.
            </summary>
            <value>The X.509 certificate with which to sign outgoing messages.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolve">
            <summary>
            The <c>ArtifactResolve</c> class requests that an artifact handle be exchanged for its original SAML message.
            </summary>
            <remarks>See the samlp:ArtifactResolve element defined in [SamlCore, 3.5.1] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolve.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolve"/> class.
            </summary>
            <param name="artifact">The artifact to be resolved.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResolve.Artifact">
            <summary>
            Gets or sets the artifact value to be resolved.
            </summary>
            <value>The base64-encoded artifact value to be resolved.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResponse">
            <summary>
            The <c>ArtifactResponse</c> class contains the result of an artifact resolution request.
            </summary>
            <remarks>See the samlp:ArtifactResponse element defined in [SamlCore, 3.5.2] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResponse.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Status)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResponse"/> class.
            </summary>
            <param name="status">The SAML status associated with this response.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResponse.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Status,Microsoft.IdentityModel.Protocols.Saml2.Saml2Message)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResponse"/> class.
            </summary>
            <param name="status">The SAML status associated with this response.</param>
            <param name="response">The SAML message contained in this artifact response.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.ArtifactResponse.Response">
            <summary>
            Gets or sets the SAML message returned in the artifact response.
            </summary>
            <value>The SAML message to be returned in the artifact response.</value>
        </member>
        <member name="T:Microsoft.IdentityModel.Protocols.Saml2.NameIdMappingResponse">
            <summary>
            The <c>NameIdMappingResponse</c> class represents a response to a request to change a subject's SAML name identifier.
            </summary>
            <remarks>See the samlp:NameIDMappingResponse element defined in [SamlCore, 3.8.2] for more details.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.Protocols.Saml2.NameIdMappingResponse.#ctor(Microsoft.IdentityModel.Protocols.Saml2.Status,Microsoft.IdentityModel.Tokens.Saml2.Saml2NameIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Protocols.Saml2.NameIdMappingResponse"/> class.
            </summary>
            <param name="status">The SAML status code associated with this response.</param>
            <param name="nameId">The mapped name identifier.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Protocols.Saml2.NameIdMappingResponse.NameId">
            <summary>
            Gets or sets the mapped name identifier.
            </summary>
            <value>The mapped name identifier.</value>
        </member>
    </members>
</doc>
